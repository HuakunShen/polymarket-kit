// Code generated by Microsoft Kiota - DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package clob

import (
    i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91 "github.com/microsoft/kiota-abstractions-go/serialization"
)

type PricesPostResponse struct {
    // Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
    additionalData map[string]any
    // The prices property
    prices []float64
}
// NewPricesPostResponse instantiates a new PricesPostResponse and sets the default values.
func NewPricesPostResponse()(*PricesPostResponse) {
    m := &PricesPostResponse{
    }
    m.SetAdditionalData(make(map[string]any))
    return m
}
// CreatePricesPostResponseFromDiscriminatorValue creates a new instance of the appropriate class based on discriminator value
// returns a Parsable when successful
func CreatePricesPostResponseFromDiscriminatorValue(parseNode i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode)(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.Parsable, error) {
    return NewPricesPostResponse(), nil
}
// GetAdditionalData gets the AdditionalData property value. Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
// returns a map[string]any when successful
func (m *PricesPostResponse) GetAdditionalData()(map[string]any) {
    return m.additionalData
}
// GetFieldDeserializers the deserialization information for the current model
// returns a map[string]func(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode)(error) when successful
func (m *PricesPostResponse) GetFieldDeserializers()(map[string]func(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode)(error)) {
    res := make(map[string]func(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode)(error))
    res["prices"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetCollectionOfPrimitiveValues("float64")
        if err != nil {
            return err
        }
        if val != nil {
            res := make([]float64, len(val))
            for i, v := range val {
                if v != nil {
                    res[i] = *(v.(*float64))
                }
            }
            m.SetPrices(res)
        }
        return nil
    }
    return res
}
// GetPrices gets the prices property value. The prices property
// returns a []float64 when successful
func (m *PricesPostResponse) GetPrices()([]float64) {
    return m.prices
}
// Serialize serializes information the current object
func (m *PricesPostResponse) Serialize(writer i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.SerializationWriter)(error) {
    if m.GetPrices() != nil {
        err := writer.WriteCollectionOfFloat64Values("prices", m.GetPrices())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteAdditionalData(m.GetAdditionalData())
        if err != nil {
            return err
        }
    }
    return nil
}
// SetAdditionalData sets the AdditionalData property value. Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
func (m *PricesPostResponse) SetAdditionalData(value map[string]any)() {
    m.additionalData = value
}
// SetPrices sets the prices property value. The prices property
func (m *PricesPostResponse) SetPrices(value []float64)() {
    m.prices = value
}
type PricesPostResponseable interface {
    i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.AdditionalDataHolder
    i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.Parsable
    GetPrices()([]float64)
    SetPrices(value []float64)()
}
