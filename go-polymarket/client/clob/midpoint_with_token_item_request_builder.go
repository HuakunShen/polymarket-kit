// Code generated by Microsoft Kiota - DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package clob

import (
    "context"
    i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f "github.com/microsoft/kiota-abstractions-go"
)

// MidpointWithTokenItemRequestBuilder builds and executes requests for operations under \clob\midpoint\{tokenId}
type MidpointWithTokenItemRequestBuilder struct {
    i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f.BaseRequestBuilder
}
// MidpointWithTokenItemRequestBuilderGetRequestConfiguration configuration for the request such as headers, query parameters, and middleware options.
type MidpointWithTokenItemRequestBuilderGetRequestConfiguration struct {
    // Request headers
    Headers *i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f.RequestHeaders
    // Request options
    Options []i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f.RequestOption
}
// NewMidpointWithTokenItemRequestBuilderInternal instantiates a new MidpointWithTokenItemRequestBuilder and sets the default values.
func NewMidpointWithTokenItemRequestBuilderInternal(pathParameters map[string]string, requestAdapter i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f.RequestAdapter)(*MidpointWithTokenItemRequestBuilder) {
    m := &MidpointWithTokenItemRequestBuilder{
        BaseRequestBuilder: *i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f.NewBaseRequestBuilder(requestAdapter, "{+baseurl}/clob/midpoint/{tokenId}", pathParameters),
    }
    return m
}
// NewMidpointWithTokenItemRequestBuilder instantiates a new MidpointWithTokenItemRequestBuilder and sets the default values.
func NewMidpointWithTokenItemRequestBuilder(rawUrl string, requestAdapter i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f.RequestAdapter)(*MidpointWithTokenItemRequestBuilder) {
    urlParams := make(map[string]string)
    urlParams["request-raw-url"] = rawUrl
    return NewMidpointWithTokenItemRequestBuilderInternal(urlParams, requestAdapter)
}
// Get get the midpoint price for a specific token ID. Headers x-polymarket-key and x-polymarket-funder are required in production, optional in development (falls back to environment variables).
// Deprecated: This method is obsolete. Use GetAsWithTokenGetResponse instead.
// returns a MidpointItemWithTokenResponseable when successful
// returns a MidpointItemWithToken400Error error when the service returns a 400 status code
// returns a MidpointItemWithToken500Error error when the service returns a 500 status code
func (m *MidpointWithTokenItemRequestBuilder) Get(ctx context.Context, requestConfiguration *MidpointWithTokenItemRequestBuilderGetRequestConfiguration)(MidpointItemWithTokenResponseable, error) {
    requestInfo, err := m.ToGetRequestInformation(ctx, requestConfiguration);
    if err != nil {
        return nil, err
    }
    errorMapping := i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f.ErrorMappings {
        "400": CreateMidpointItemWithToken400ErrorFromDiscriminatorValue,
        "500": CreateMidpointItemWithToken500ErrorFromDiscriminatorValue,
    }
    res, err := m.BaseRequestBuilder.RequestAdapter.Send(ctx, requestInfo, CreateMidpointItemWithTokenResponseFromDiscriminatorValue, errorMapping)
    if err != nil {
        return nil, err
    }
    if res == nil {
        return nil, nil
    }
    return res.(MidpointItemWithTokenResponseable), nil
}
// GetAsWithTokenGetResponse get the midpoint price for a specific token ID. Headers x-polymarket-key and x-polymarket-funder are required in production, optional in development (falls back to environment variables).
// returns a MidpointItemWithTokenGetResponseable when successful
// returns a MidpointItemWithToken400Error error when the service returns a 400 status code
// returns a MidpointItemWithToken500Error error when the service returns a 500 status code
func (m *MidpointWithTokenItemRequestBuilder) GetAsWithTokenGetResponse(ctx context.Context, requestConfiguration *MidpointWithTokenItemRequestBuilderGetRequestConfiguration)(MidpointItemWithTokenGetResponseable, error) {
    requestInfo, err := m.ToGetRequestInformation(ctx, requestConfiguration);
    if err != nil {
        return nil, err
    }
    errorMapping := i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f.ErrorMappings {
        "400": CreateMidpointItemWithToken400ErrorFromDiscriminatorValue,
        "500": CreateMidpointItemWithToken500ErrorFromDiscriminatorValue,
    }
    res, err := m.BaseRequestBuilder.RequestAdapter.Send(ctx, requestInfo, CreateMidpointItemWithTokenGetResponseFromDiscriminatorValue, errorMapping)
    if err != nil {
        return nil, err
    }
    if res == nil {
        return nil, nil
    }
    return res.(MidpointItemWithTokenGetResponseable), nil
}
// ToGetRequestInformation get the midpoint price for a specific token ID. Headers x-polymarket-key and x-polymarket-funder are required in production, optional in development (falls back to environment variables).
// returns a *RequestInformation when successful
func (m *MidpointWithTokenItemRequestBuilder) ToGetRequestInformation(ctx context.Context, requestConfiguration *MidpointWithTokenItemRequestBuilderGetRequestConfiguration)(*i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f.RequestInformation, error) {
    requestInfo := i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f.NewRequestInformationWithMethodAndUrlTemplateAndPathParameters(i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f.GET, m.BaseRequestBuilder.UrlTemplate, m.BaseRequestBuilder.PathParameters)
    if requestConfiguration != nil {
        requestInfo.Headers.AddAll(requestConfiguration.Headers)
        requestInfo.AddRequestOptions(requestConfiguration.Options)
    }
    requestInfo.Headers.TryAdd("Accept", "application/json")
    return requestInfo, nil
}
// WithUrl returns a request builder with the provided arbitrary URL. Using this method means any other path or query parameters are ignored.
// returns a *MidpointWithTokenItemRequestBuilder when successful
func (m *MidpointWithTokenItemRequestBuilder) WithUrl(rawUrl string)(*MidpointWithTokenItemRequestBuilder) {
    return NewMidpointWithTokenItemRequestBuilder(rawUrl, m.BaseRequestBuilder.RequestAdapter);
}
