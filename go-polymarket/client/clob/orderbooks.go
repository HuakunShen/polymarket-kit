// Code generated by Microsoft Kiota - DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package clob

import (
    i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91 "github.com/microsoft/kiota-abstractions-go/serialization"
)

type Orderbooks struct {
    // Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
    additionalData map[string]any
    // The asks property
    asks []Orderbooks_asksable
    // The asset_id property
    asset_id *string
    // The bids property
    bids []Orderbooks_bidsable
    // The hash property
    hash *string
    // The market property
    market *string
    // The min_order_size property
    min_order_size *string
    // The neg_risk property
    neg_risk *bool
    // The tick_size property
    tick_size *string
    // The timestamp property
    timestamp *string
}
// NewOrderbooks instantiates a new Orderbooks and sets the default values.
func NewOrderbooks()(*Orderbooks) {
    m := &Orderbooks{
    }
    m.SetAdditionalData(make(map[string]any))
    return m
}
// CreateOrderbooksFromDiscriminatorValue creates a new instance of the appropriate class based on discriminator value
// returns a Parsable when successful
func CreateOrderbooksFromDiscriminatorValue(parseNode i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode)(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.Parsable, error) {
    return NewOrderbooks(), nil
}
// GetAdditionalData gets the AdditionalData property value. Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
// returns a map[string]any when successful
func (m *Orderbooks) GetAdditionalData()(map[string]any) {
    return m.additionalData
}
// GetAsks gets the asks property value. The asks property
// returns a []Orderbooks_asksable when successful
func (m *Orderbooks) GetAsks()([]Orderbooks_asksable) {
    return m.asks
}
// GetAssetId gets the asset_id property value. The asset_id property
// returns a *string when successful
func (m *Orderbooks) GetAssetId()(*string) {
    return m.asset_id
}
// GetBids gets the bids property value. The bids property
// returns a []Orderbooks_bidsable when successful
func (m *Orderbooks) GetBids()([]Orderbooks_bidsable) {
    return m.bids
}
// GetFieldDeserializers the deserialization information for the current model
// returns a map[string]func(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode)(error) when successful
func (m *Orderbooks) GetFieldDeserializers()(map[string]func(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode)(error)) {
    res := make(map[string]func(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode)(error))
    res["asks"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetCollectionOfObjectValues(CreateOrderbooks_asksFromDiscriminatorValue)
        if err != nil {
            return err
        }
        if val != nil {
            res := make([]Orderbooks_asksable, len(val))
            for i, v := range val {
                if v != nil {
                    res[i] = v.(Orderbooks_asksable)
                }
            }
            m.SetAsks(res)
        }
        return nil
    }
    res["asset_id"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetAssetId(val)
        }
        return nil
    }
    res["bids"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetCollectionOfObjectValues(CreateOrderbooks_bidsFromDiscriminatorValue)
        if err != nil {
            return err
        }
        if val != nil {
            res := make([]Orderbooks_bidsable, len(val))
            for i, v := range val {
                if v != nil {
                    res[i] = v.(Orderbooks_bidsable)
                }
            }
            m.SetBids(res)
        }
        return nil
    }
    res["hash"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetHash(val)
        }
        return nil
    }
    res["market"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetMarket(val)
        }
        return nil
    }
    res["min_order_size"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetMinOrderSize(val)
        }
        return nil
    }
    res["neg_risk"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetBoolValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetNegRisk(val)
        }
        return nil
    }
    res["tick_size"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetTickSize(val)
        }
        return nil
    }
    res["timestamp"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetTimestamp(val)
        }
        return nil
    }
    return res
}
// GetHash gets the hash property value. The hash property
// returns a *string when successful
func (m *Orderbooks) GetHash()(*string) {
    return m.hash
}
// GetMarket gets the market property value. The market property
// returns a *string when successful
func (m *Orderbooks) GetMarket()(*string) {
    return m.market
}
// GetMinOrderSize gets the min_order_size property value. The min_order_size property
// returns a *string when successful
func (m *Orderbooks) GetMinOrderSize()(*string) {
    return m.min_order_size
}
// GetNegRisk gets the neg_risk property value. The neg_risk property
// returns a *bool when successful
func (m *Orderbooks) GetNegRisk()(*bool) {
    return m.neg_risk
}
// GetTickSize gets the tick_size property value. The tick_size property
// returns a *string when successful
func (m *Orderbooks) GetTickSize()(*string) {
    return m.tick_size
}
// GetTimestamp gets the timestamp property value. The timestamp property
// returns a *string when successful
func (m *Orderbooks) GetTimestamp()(*string) {
    return m.timestamp
}
// Serialize serializes information the current object
func (m *Orderbooks) Serialize(writer i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.SerializationWriter)(error) {
    if m.GetAsks() != nil {
        cast := make([]i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.Parsable, len(m.GetAsks()))
        for i, v := range m.GetAsks() {
            if v != nil {
                cast[i] = v.(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.Parsable)
            }
        }
        err := writer.WriteCollectionOfObjectValues("asks", cast)
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteStringValue("asset_id", m.GetAssetId())
        if err != nil {
            return err
        }
    }
    if m.GetBids() != nil {
        cast := make([]i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.Parsable, len(m.GetBids()))
        for i, v := range m.GetBids() {
            if v != nil {
                cast[i] = v.(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.Parsable)
            }
        }
        err := writer.WriteCollectionOfObjectValues("bids", cast)
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteStringValue("hash", m.GetHash())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteStringValue("market", m.GetMarket())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteStringValue("min_order_size", m.GetMinOrderSize())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteBoolValue("neg_risk", m.GetNegRisk())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteStringValue("tick_size", m.GetTickSize())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteStringValue("timestamp", m.GetTimestamp())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteAdditionalData(m.GetAdditionalData())
        if err != nil {
            return err
        }
    }
    return nil
}
// SetAdditionalData sets the AdditionalData property value. Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
func (m *Orderbooks) SetAdditionalData(value map[string]any)() {
    m.additionalData = value
}
// SetAsks sets the asks property value. The asks property
func (m *Orderbooks) SetAsks(value []Orderbooks_asksable)() {
    m.asks = value
}
// SetAssetId sets the asset_id property value. The asset_id property
func (m *Orderbooks) SetAssetId(value *string)() {
    m.asset_id = value
}
// SetBids sets the bids property value. The bids property
func (m *Orderbooks) SetBids(value []Orderbooks_bidsable)() {
    m.bids = value
}
// SetHash sets the hash property value. The hash property
func (m *Orderbooks) SetHash(value *string)() {
    m.hash = value
}
// SetMarket sets the market property value. The market property
func (m *Orderbooks) SetMarket(value *string)() {
    m.market = value
}
// SetMinOrderSize sets the min_order_size property value. The min_order_size property
func (m *Orderbooks) SetMinOrderSize(value *string)() {
    m.min_order_size = value
}
// SetNegRisk sets the neg_risk property value. The neg_risk property
func (m *Orderbooks) SetNegRisk(value *bool)() {
    m.neg_risk = value
}
// SetTickSize sets the tick_size property value. The tick_size property
func (m *Orderbooks) SetTickSize(value *string)() {
    m.tick_size = value
}
// SetTimestamp sets the timestamp property value. The timestamp property
func (m *Orderbooks) SetTimestamp(value *string)() {
    m.timestamp = value
}
type Orderbooksable interface {
    i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.AdditionalDataHolder
    i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.Parsable
    GetAsks()([]Orderbooks_asksable)
    GetAssetId()(*string)
    GetBids()([]Orderbooks_bidsable)
    GetHash()(*string)
    GetMarket()(*string)
    GetMinOrderSize()(*string)
    GetNegRisk()(*bool)
    GetTickSize()(*string)
    GetTimestamp()(*string)
    SetAsks(value []Orderbooks_asksable)()
    SetAssetId(value *string)()
    SetBids(value []Orderbooks_bidsable)()
    SetHash(value *string)()
    SetMarket(value *string)()
    SetMinOrderSize(value *string)()
    SetNegRisk(value *bool)()
    SetTickSize(value *string)()
    SetTimestamp(value *string)()
}
