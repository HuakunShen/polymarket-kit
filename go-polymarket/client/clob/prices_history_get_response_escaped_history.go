// Code generated by Microsoft Kiota - DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package clob

import (
    i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91 "github.com/microsoft/kiota-abstractions-go/serialization"
)

type PricesHistoryGetResponse_history struct {
    // Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
    additionalData map[string]any
    // The p property
    p *float64
    // The t property
    t *float64
}
// NewPricesHistoryGetResponse_history instantiates a new PricesHistoryGetResponse_history and sets the default values.
func NewPricesHistoryGetResponse_history()(*PricesHistoryGetResponse_history) {
    m := &PricesHistoryGetResponse_history{
    }
    m.SetAdditionalData(make(map[string]any))
    return m
}
// CreatePricesHistoryGetResponse_historyFromDiscriminatorValue creates a new instance of the appropriate class based on discriminator value
// returns a Parsable when successful
func CreatePricesHistoryGetResponse_historyFromDiscriminatorValue(parseNode i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode)(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.Parsable, error) {
    return NewPricesHistoryGetResponse_history(), nil
}
// GetAdditionalData gets the AdditionalData property value. Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
// returns a map[string]any when successful
func (m *PricesHistoryGetResponse_history) GetAdditionalData()(map[string]any) {
    return m.additionalData
}
// GetFieldDeserializers the deserialization information for the current model
// returns a map[string]func(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode)(error) when successful
func (m *PricesHistoryGetResponse_history) GetFieldDeserializers()(map[string]func(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode)(error)) {
    res := make(map[string]func(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode)(error))
    res["p"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetFloat64Value()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetP(val)
        }
        return nil
    }
    res["t"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetFloat64Value()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetT(val)
        }
        return nil
    }
    return res
}
// GetP gets the p property value. The p property
// returns a *float64 when successful
func (m *PricesHistoryGetResponse_history) GetP()(*float64) {
    return m.p
}
// GetT gets the t property value. The t property
// returns a *float64 when successful
func (m *PricesHistoryGetResponse_history) GetT()(*float64) {
    return m.t
}
// Serialize serializes information the current object
func (m *PricesHistoryGetResponse_history) Serialize(writer i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.SerializationWriter)(error) {
    {
        err := writer.WriteFloat64Value("p", m.GetP())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteFloat64Value("t", m.GetT())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteAdditionalData(m.GetAdditionalData())
        if err != nil {
            return err
        }
    }
    return nil
}
// SetAdditionalData sets the AdditionalData property value. Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
func (m *PricesHistoryGetResponse_history) SetAdditionalData(value map[string]any)() {
    m.additionalData = value
}
// SetP sets the p property value. The p property
func (m *PricesHistoryGetResponse_history) SetP(value *float64)() {
    m.p = value
}
// SetT sets the t property value. The t property
func (m *PricesHistoryGetResponse_history) SetT(value *float64)() {
    m.t = value
}
type PricesHistoryGetResponse_historyable interface {
    i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.AdditionalDataHolder
    i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.Parsable
    GetP()(*float64)
    GetT()(*float64)
    SetP(value *float64)()
    SetT(value *float64)()
}
