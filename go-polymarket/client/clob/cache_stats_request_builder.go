// Code generated by Microsoft Kiota - DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package clob

import (
    "context"
    i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f "github.com/microsoft/kiota-abstractions-go"
)

// CacheStatsRequestBuilder builds and executes requests for operations under \clob\cache\stats
type CacheStatsRequestBuilder struct {
    i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f.BaseRequestBuilder
}
// CacheStatsRequestBuilderGetRequestConfiguration configuration for the request such as headers, query parameters, and middleware options.
type CacheStatsRequestBuilderGetRequestConfiguration struct {
    // Request headers
    Headers *i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f.RequestHeaders
    // Request options
    Options []i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f.RequestOption
}
// NewCacheStatsRequestBuilderInternal instantiates a new CacheStatsRequestBuilder and sets the default values.
func NewCacheStatsRequestBuilderInternal(pathParameters map[string]string, requestAdapter i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f.RequestAdapter)(*CacheStatsRequestBuilder) {
    m := &CacheStatsRequestBuilder{
        BaseRequestBuilder: *i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f.NewBaseRequestBuilder(requestAdapter, "{+baseurl}/clob/cache/stats", pathParameters),
    }
    return m
}
// NewCacheStatsRequestBuilder instantiates a new CacheStatsRequestBuilder and sets the default values.
func NewCacheStatsRequestBuilder(rawUrl string, requestAdapter i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f.RequestAdapter)(*CacheStatsRequestBuilder) {
    urlParams := make(map[string]string)
    urlParams["request-raw-url"] = rawUrl
    return NewCacheStatsRequestBuilderInternal(urlParams, requestAdapter)
}
// Get get cache statistics for SDK instances and CLOB clients. Shows current cache size and limits.
// Deprecated: This method is obsolete. Use GetAsStatsGetResponse instead.
// returns a CacheStatsResponseable when successful
func (m *CacheStatsRequestBuilder) Get(ctx context.Context, requestConfiguration *CacheStatsRequestBuilderGetRequestConfiguration)(CacheStatsResponseable, error) {
    requestInfo, err := m.ToGetRequestInformation(ctx, requestConfiguration);
    if err != nil {
        return nil, err
    }
    res, err := m.BaseRequestBuilder.RequestAdapter.Send(ctx, requestInfo, CreateCacheStatsResponseFromDiscriminatorValue, nil)
    if err != nil {
        return nil, err
    }
    if res == nil {
        return nil, nil
    }
    return res.(CacheStatsResponseable), nil
}
// GetAsStatsGetResponse get cache statistics for SDK instances and CLOB clients. Shows current cache size and limits.
// returns a CacheStatsGetResponseable when successful
func (m *CacheStatsRequestBuilder) GetAsStatsGetResponse(ctx context.Context, requestConfiguration *CacheStatsRequestBuilderGetRequestConfiguration)(CacheStatsGetResponseable, error) {
    requestInfo, err := m.ToGetRequestInformation(ctx, requestConfiguration);
    if err != nil {
        return nil, err
    }
    res, err := m.BaseRequestBuilder.RequestAdapter.Send(ctx, requestInfo, CreateCacheStatsGetResponseFromDiscriminatorValue, nil)
    if err != nil {
        return nil, err
    }
    if res == nil {
        return nil, nil
    }
    return res.(CacheStatsGetResponseable), nil
}
// ToGetRequestInformation get cache statistics for SDK instances and CLOB clients. Shows current cache size and limits.
// returns a *RequestInformation when successful
func (m *CacheStatsRequestBuilder) ToGetRequestInformation(ctx context.Context, requestConfiguration *CacheStatsRequestBuilderGetRequestConfiguration)(*i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f.RequestInformation, error) {
    requestInfo := i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f.NewRequestInformationWithMethodAndUrlTemplateAndPathParameters(i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f.GET, m.BaseRequestBuilder.UrlTemplate, m.BaseRequestBuilder.PathParameters)
    if requestConfiguration != nil {
        requestInfo.Headers.AddAll(requestConfiguration.Headers)
        requestInfo.AddRequestOptions(requestConfiguration.Options)
    }
    requestInfo.Headers.TryAdd("Accept", "application/json")
    return requestInfo, nil
}
// WithUrl returns a request builder with the provided arbitrary URL. Using this method means any other path or query parameters are ignored.
// returns a *CacheStatsRequestBuilder when successful
func (m *CacheStatsRequestBuilder) WithUrl(rawUrl string)(*CacheStatsRequestBuilder) {
    return NewCacheStatsRequestBuilder(rawUrl, m.BaseRequestBuilder.RequestAdapter);
}
