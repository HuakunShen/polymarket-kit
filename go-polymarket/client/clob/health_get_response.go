// Code generated by Microsoft Kiota - DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package clob

import (
    i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91 "github.com/microsoft/kiota-abstractions-go/serialization"
)

type HealthGetResponse struct {
    // Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
    additionalData map[string]any
    // The cached property
    cached *bool
    // The clob property
    clob *string
    // The error property
    error *string
    // The status property
    status HealthGetResponse_HealthGetResponse_statusable
    // The timestamp property
    timestamp *string
}
// HealthGetResponse_HealthGetResponse_status composed type wrapper for classes string
type HealthGetResponse_HealthGetResponse_status struct {
    // Composed type representation for type string
    string *string
}
// NewHealthGetResponse_HealthGetResponse_status instantiates a new HealthGetResponse_HealthGetResponse_status and sets the default values.
func NewHealthGetResponse_HealthGetResponse_status()(*HealthGetResponse_HealthGetResponse_status) {
    m := &HealthGetResponse_HealthGetResponse_status{
    }
    return m
}
// CreateHealthGetResponse_HealthGetResponse_statusFromDiscriminatorValue creates a new instance of the appropriate class based on discriminator value
// returns a Parsable when successful
func CreateHealthGetResponse_HealthGetResponse_statusFromDiscriminatorValue(parseNode i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode)(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.Parsable, error) {
    result := NewHealthGetResponse_HealthGetResponse_status()
    if parseNode != nil {
        if val, err := parseNode.GetStringValue(); val != nil {
            if err != nil {
                return nil, err
            }
            result.SetString(val)
        }
    }
    return result, nil
}
// GetFieldDeserializers the deserialization information for the current model
// returns a map[string]func(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode)(error) when successful
func (m *HealthGetResponse_HealthGetResponse_status) GetFieldDeserializers()(map[string]func(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode)(error)) {
    return make(map[string]func(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode)(error))
}
// GetIsComposedType determines if the current object is a wrapper around a composed type
// returns a bool when successful
func (m *HealthGetResponse_HealthGetResponse_status) GetIsComposedType()(bool) {
    return true
}
// GetString gets the string property value. Composed type representation for type string
// returns a *string when successful
func (m *HealthGetResponse_HealthGetResponse_status) GetString()(*string) {
    return m.string
}
// Serialize serializes information the current object
func (m *HealthGetResponse_HealthGetResponse_status) Serialize(writer i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.SerializationWriter)(error) {
    if m.GetString() != nil {
        err := writer.WriteStringValue("", m.GetString())
        if err != nil {
            return err
        }
    }
    return nil
}
// SetString sets the string property value. Composed type representation for type string
func (m *HealthGetResponse_HealthGetResponse_status) SetString(value *string)() {
    m.string = value
}
type HealthGetResponse_HealthGetResponse_statusable interface {
    i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.Parsable
    GetString()(*string)
    SetString(value *string)()
}
// NewHealthGetResponse instantiates a new HealthGetResponse and sets the default values.
func NewHealthGetResponse()(*HealthGetResponse) {
    m := &HealthGetResponse{
    }
    m.SetAdditionalData(make(map[string]any))
    return m
}
// CreateHealthGetResponseFromDiscriminatorValue creates a new instance of the appropriate class based on discriminator value
// returns a Parsable when successful
func CreateHealthGetResponseFromDiscriminatorValue(parseNode i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode)(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.Parsable, error) {
    return NewHealthGetResponse(), nil
}
// GetAdditionalData gets the AdditionalData property value. Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
// returns a map[string]any when successful
func (m *HealthGetResponse) GetAdditionalData()(map[string]any) {
    return m.additionalData
}
// GetCached gets the cached property value. The cached property
// returns a *bool when successful
func (m *HealthGetResponse) GetCached()(*bool) {
    return m.cached
}
// GetClob gets the clob property value. The clob property
// returns a *string when successful
func (m *HealthGetResponse) GetClob()(*string) {
    return m.clob
}
// GetError gets the error property value. The error property
// returns a *string when successful
func (m *HealthGetResponse) GetError()(*string) {
    return m.error
}
// GetFieldDeserializers the deserialization information for the current model
// returns a map[string]func(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode)(error) when successful
func (m *HealthGetResponse) GetFieldDeserializers()(map[string]func(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode)(error)) {
    res := make(map[string]func(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode)(error))
    res["cached"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetBoolValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetCached(val)
        }
        return nil
    }
    res["clob"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetClob(val)
        }
        return nil
    }
    res["error"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetError(val)
        }
        return nil
    }
    res["status"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetObjectValue(CreateHealthGetResponse_HealthGetResponse_statusFromDiscriminatorValue)
        if err != nil {
            return err
        }
        if val != nil {
            m.SetStatus(val.(HealthGetResponse_HealthGetResponse_statusable))
        }
        return nil
    }
    res["timestamp"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetTimestamp(val)
        }
        return nil
    }
    return res
}
// GetStatus gets the status property value. The status property
// returns a HealthGetResponse_HealthGetResponse_statusable when successful
func (m *HealthGetResponse) GetStatus()(HealthGetResponse_HealthGetResponse_statusable) {
    return m.status
}
// GetTimestamp gets the timestamp property value. The timestamp property
// returns a *string when successful
func (m *HealthGetResponse) GetTimestamp()(*string) {
    return m.timestamp
}
// Serialize serializes information the current object
func (m *HealthGetResponse) Serialize(writer i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.SerializationWriter)(error) {
    {
        err := writer.WriteBoolValue("cached", m.GetCached())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteStringValue("clob", m.GetClob())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteStringValue("error", m.GetError())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteObjectValue("status", m.GetStatus())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteStringValue("timestamp", m.GetTimestamp())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteAdditionalData(m.GetAdditionalData())
        if err != nil {
            return err
        }
    }
    return nil
}
// SetAdditionalData sets the AdditionalData property value. Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
func (m *HealthGetResponse) SetAdditionalData(value map[string]any)() {
    m.additionalData = value
}
// SetCached sets the cached property value. The cached property
func (m *HealthGetResponse) SetCached(value *bool)() {
    m.cached = value
}
// SetClob sets the clob property value. The clob property
func (m *HealthGetResponse) SetClob(value *string)() {
    m.clob = value
}
// SetError sets the error property value. The error property
func (m *HealthGetResponse) SetError(value *string)() {
    m.error = value
}
// SetStatus sets the status property value. The status property
func (m *HealthGetResponse) SetStatus(value HealthGetResponse_HealthGetResponse_statusable)() {
    m.status = value
}
// SetTimestamp sets the timestamp property value. The timestamp property
func (m *HealthGetResponse) SetTimestamp(value *string)() {
    m.timestamp = value
}
type HealthGetResponseable interface {
    i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.AdditionalDataHolder
    i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.Parsable
    GetCached()(*bool)
    GetClob()(*string)
    GetError()(*string)
    GetStatus()(HealthGetResponse_HealthGetResponse_statusable)
    GetTimestamp()(*string)
    SetCached(value *bool)()
    SetClob(value *string)()
    SetError(value *string)()
    SetStatus(value HealthGetResponse_HealthGetResponse_statusable)()
    SetTimestamp(value *string)()
}
