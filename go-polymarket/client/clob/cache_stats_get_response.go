// Code generated by Microsoft Kiota - DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package clob

import (
    i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91 "github.com/microsoft/kiota-abstractions-go/serialization"
)

type CacheStatsGetResponse struct {
    // Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
    additionalData map[string]any
    // The clobClientCache property
    clobClientCache CacheStatsGetResponse_clobClientCacheable
    // The sdkCache property
    sdkCache CacheStatsGetResponse_sdkCacheable
    // The timestamp property
    timestamp *string
}
// NewCacheStatsGetResponse instantiates a new CacheStatsGetResponse and sets the default values.
func NewCacheStatsGetResponse()(*CacheStatsGetResponse) {
    m := &CacheStatsGetResponse{
    }
    m.SetAdditionalData(make(map[string]any))
    return m
}
// CreateCacheStatsGetResponseFromDiscriminatorValue creates a new instance of the appropriate class based on discriminator value
// returns a Parsable when successful
func CreateCacheStatsGetResponseFromDiscriminatorValue(parseNode i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode)(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.Parsable, error) {
    return NewCacheStatsGetResponse(), nil
}
// GetAdditionalData gets the AdditionalData property value. Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
// returns a map[string]any when successful
func (m *CacheStatsGetResponse) GetAdditionalData()(map[string]any) {
    return m.additionalData
}
// GetClobClientCache gets the clobClientCache property value. The clobClientCache property
// returns a CacheStatsGetResponse_clobClientCacheable when successful
func (m *CacheStatsGetResponse) GetClobClientCache()(CacheStatsGetResponse_clobClientCacheable) {
    return m.clobClientCache
}
// GetFieldDeserializers the deserialization information for the current model
// returns a map[string]func(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode)(error) when successful
func (m *CacheStatsGetResponse) GetFieldDeserializers()(map[string]func(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode)(error)) {
    res := make(map[string]func(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode)(error))
    res["clobClientCache"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetObjectValue(CreateCacheStatsGetResponse_clobClientCacheFromDiscriminatorValue)
        if err != nil {
            return err
        }
        if val != nil {
            m.SetClobClientCache(val.(CacheStatsGetResponse_clobClientCacheable))
        }
        return nil
    }
    res["sdkCache"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetObjectValue(CreateCacheStatsGetResponse_sdkCacheFromDiscriminatorValue)
        if err != nil {
            return err
        }
        if val != nil {
            m.SetSdkCache(val.(CacheStatsGetResponse_sdkCacheable))
        }
        return nil
    }
    res["timestamp"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetTimestamp(val)
        }
        return nil
    }
    return res
}
// GetSdkCache gets the sdkCache property value. The sdkCache property
// returns a CacheStatsGetResponse_sdkCacheable when successful
func (m *CacheStatsGetResponse) GetSdkCache()(CacheStatsGetResponse_sdkCacheable) {
    return m.sdkCache
}
// GetTimestamp gets the timestamp property value. The timestamp property
// returns a *string when successful
func (m *CacheStatsGetResponse) GetTimestamp()(*string) {
    return m.timestamp
}
// Serialize serializes information the current object
func (m *CacheStatsGetResponse) Serialize(writer i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.SerializationWriter)(error) {
    {
        err := writer.WriteObjectValue("clobClientCache", m.GetClobClientCache())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteObjectValue("sdkCache", m.GetSdkCache())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteStringValue("timestamp", m.GetTimestamp())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteAdditionalData(m.GetAdditionalData())
        if err != nil {
            return err
        }
    }
    return nil
}
// SetAdditionalData sets the AdditionalData property value. Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
func (m *CacheStatsGetResponse) SetAdditionalData(value map[string]any)() {
    m.additionalData = value
}
// SetClobClientCache sets the clobClientCache property value. The clobClientCache property
func (m *CacheStatsGetResponse) SetClobClientCache(value CacheStatsGetResponse_clobClientCacheable)() {
    m.clobClientCache = value
}
// SetSdkCache sets the sdkCache property value. The sdkCache property
func (m *CacheStatsGetResponse) SetSdkCache(value CacheStatsGetResponse_sdkCacheable)() {
    m.sdkCache = value
}
// SetTimestamp sets the timestamp property value. The timestamp property
func (m *CacheStatsGetResponse) SetTimestamp(value *string)() {
    m.timestamp = value
}
type CacheStatsGetResponseable interface {
    i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.AdditionalDataHolder
    i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.Parsable
    GetClobClientCache()(CacheStatsGetResponse_clobClientCacheable)
    GetSdkCache()(CacheStatsGetResponse_sdkCacheable)
    GetTimestamp()(*string)
    SetClobClientCache(value CacheStatsGetResponse_clobClientCacheable)()
    SetSdkCache(value CacheStatsGetResponse_sdkCacheable)()
    SetTimestamp(value *string)()
}
