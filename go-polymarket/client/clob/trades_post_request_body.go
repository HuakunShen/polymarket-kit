// Code generated by Microsoft Kiota - DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package clob

import (
    i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91 "github.com/microsoft/kiota-abstractions-go/serialization"
)

type TradesPostRequestBody struct {
    // Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
    additionalData map[string]any
    // The after property
    after *string
    // The asset_id property
    asset_id *string
    // The before property
    before *string
    // The id property
    id *string
    // The maker_address property
    maker_address *string
    // The market property
    market *string
    // The next_cursor property
    next_cursor *string
    // The only_first_page property
    only_first_page *bool
}
// NewTradesPostRequestBody instantiates a new TradesPostRequestBody and sets the default values.
func NewTradesPostRequestBody()(*TradesPostRequestBody) {
    m := &TradesPostRequestBody{
    }
    m.SetAdditionalData(make(map[string]any))
    return m
}
// CreateTradesPostRequestBodyFromDiscriminatorValue creates a new instance of the appropriate class based on discriminator value
// returns a Parsable when successful
func CreateTradesPostRequestBodyFromDiscriminatorValue(parseNode i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode)(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.Parsable, error) {
    return NewTradesPostRequestBody(), nil
}
// GetAdditionalData gets the AdditionalData property value. Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
// returns a map[string]any when successful
func (m *TradesPostRequestBody) GetAdditionalData()(map[string]any) {
    return m.additionalData
}
// GetAfter gets the after property value. The after property
// returns a *string when successful
func (m *TradesPostRequestBody) GetAfter()(*string) {
    return m.after
}
// GetAssetId gets the asset_id property value. The asset_id property
// returns a *string when successful
func (m *TradesPostRequestBody) GetAssetId()(*string) {
    return m.asset_id
}
// GetBefore gets the before property value. The before property
// returns a *string when successful
func (m *TradesPostRequestBody) GetBefore()(*string) {
    return m.before
}
// GetFieldDeserializers the deserialization information for the current model
// returns a map[string]func(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode)(error) when successful
func (m *TradesPostRequestBody) GetFieldDeserializers()(map[string]func(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode)(error)) {
    res := make(map[string]func(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode)(error))
    res["after"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetAfter(val)
        }
        return nil
    }
    res["asset_id"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetAssetId(val)
        }
        return nil
    }
    res["before"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetBefore(val)
        }
        return nil
    }
    res["id"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetId(val)
        }
        return nil
    }
    res["maker_address"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetMakerAddress(val)
        }
        return nil
    }
    res["market"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetMarket(val)
        }
        return nil
    }
    res["next_cursor"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetNextCursor(val)
        }
        return nil
    }
    res["only_first_page"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetBoolValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetOnlyFirstPage(val)
        }
        return nil
    }
    return res
}
// GetId gets the id property value. The id property
// returns a *string when successful
func (m *TradesPostRequestBody) GetId()(*string) {
    return m.id
}
// GetMakerAddress gets the maker_address property value. The maker_address property
// returns a *string when successful
func (m *TradesPostRequestBody) GetMakerAddress()(*string) {
    return m.maker_address
}
// GetMarket gets the market property value. The market property
// returns a *string when successful
func (m *TradesPostRequestBody) GetMarket()(*string) {
    return m.market
}
// GetNextCursor gets the next_cursor property value. The next_cursor property
// returns a *string when successful
func (m *TradesPostRequestBody) GetNextCursor()(*string) {
    return m.next_cursor
}
// GetOnlyFirstPage gets the only_first_page property value. The only_first_page property
// returns a *bool when successful
func (m *TradesPostRequestBody) GetOnlyFirstPage()(*bool) {
    return m.only_first_page
}
// Serialize serializes information the current object
func (m *TradesPostRequestBody) Serialize(writer i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.SerializationWriter)(error) {
    {
        err := writer.WriteStringValue("after", m.GetAfter())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteStringValue("asset_id", m.GetAssetId())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteStringValue("before", m.GetBefore())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteStringValue("id", m.GetId())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteStringValue("maker_address", m.GetMakerAddress())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteStringValue("market", m.GetMarket())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteStringValue("next_cursor", m.GetNextCursor())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteBoolValue("only_first_page", m.GetOnlyFirstPage())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteAdditionalData(m.GetAdditionalData())
        if err != nil {
            return err
        }
    }
    return nil
}
// SetAdditionalData sets the AdditionalData property value. Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
func (m *TradesPostRequestBody) SetAdditionalData(value map[string]any)() {
    m.additionalData = value
}
// SetAfter sets the after property value. The after property
func (m *TradesPostRequestBody) SetAfter(value *string)() {
    m.after = value
}
// SetAssetId sets the asset_id property value. The asset_id property
func (m *TradesPostRequestBody) SetAssetId(value *string)() {
    m.asset_id = value
}
// SetBefore sets the before property value. The before property
func (m *TradesPostRequestBody) SetBefore(value *string)() {
    m.before = value
}
// SetId sets the id property value. The id property
func (m *TradesPostRequestBody) SetId(value *string)() {
    m.id = value
}
// SetMakerAddress sets the maker_address property value. The maker_address property
func (m *TradesPostRequestBody) SetMakerAddress(value *string)() {
    m.maker_address = value
}
// SetMarket sets the market property value. The market property
func (m *TradesPostRequestBody) SetMarket(value *string)() {
    m.market = value
}
// SetNextCursor sets the next_cursor property value. The next_cursor property
func (m *TradesPostRequestBody) SetNextCursor(value *string)() {
    m.next_cursor = value
}
// SetOnlyFirstPage sets the only_first_page property value. The only_first_page property
func (m *TradesPostRequestBody) SetOnlyFirstPage(value *bool)() {
    m.only_first_page = value
}
type TradesPostRequestBodyable interface {
    i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.AdditionalDataHolder
    i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.Parsable
    GetAfter()(*string)
    GetAssetId()(*string)
    GetBefore()(*string)
    GetId()(*string)
    GetMakerAddress()(*string)
    GetMarket()(*string)
    GetNextCursor()(*string)
    GetOnlyFirstPage()(*bool)
    SetAfter(value *string)()
    SetAssetId(value *string)()
    SetBefore(value *string)()
    SetId(value *string)()
    SetMakerAddress(value *string)()
    SetMarket(value *string)()
    SetNextCursor(value *string)()
    SetOnlyFirstPage(value *bool)()
}
