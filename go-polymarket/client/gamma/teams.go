// Code generated by Microsoft Kiota - DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package gamma

import (
    i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91 "github.com/microsoft/kiota-abstractions-go/serialization"
)

type Teams struct {
    // The abbreviation property
    abbreviation *string
    // Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
    additionalData map[string]any
    // The alias property
    alias *string
    // The createdAt property
    createdAt *string
    // The id property
    id *float64
    // The league property
    league *string
    // The logo property
    logo *string
    // The name property
    name *string
    // The record property
    record *string
    // The updatedAt property
    updatedAt *string
}
// NewTeams instantiates a new Teams and sets the default values.
func NewTeams()(*Teams) {
    m := &Teams{
    }
    m.SetAdditionalData(make(map[string]any))
    return m
}
// CreateTeamsFromDiscriminatorValue creates a new instance of the appropriate class based on discriminator value
// returns a Parsable when successful
func CreateTeamsFromDiscriminatorValue(parseNode i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode)(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.Parsable, error) {
    return NewTeams(), nil
}
// GetAbbreviation gets the abbreviation property value. The abbreviation property
// returns a *string when successful
func (m *Teams) GetAbbreviation()(*string) {
    return m.abbreviation
}
// GetAdditionalData gets the AdditionalData property value. Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
// returns a map[string]any when successful
func (m *Teams) GetAdditionalData()(map[string]any) {
    return m.additionalData
}
// GetAlias gets the alias property value. The alias property
// returns a *string when successful
func (m *Teams) GetAlias()(*string) {
    return m.alias
}
// GetCreatedAt gets the createdAt property value. The createdAt property
// returns a *string when successful
func (m *Teams) GetCreatedAt()(*string) {
    return m.createdAt
}
// GetFieldDeserializers the deserialization information for the current model
// returns a map[string]func(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode)(error) when successful
func (m *Teams) GetFieldDeserializers()(map[string]func(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode)(error)) {
    res := make(map[string]func(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode)(error))
    res["abbreviation"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetAbbreviation(val)
        }
        return nil
    }
    res["alias"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetAlias(val)
        }
        return nil
    }
    res["createdAt"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetCreatedAt(val)
        }
        return nil
    }
    res["id"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetFloat64Value()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetId(val)
        }
        return nil
    }
    res["league"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetLeague(val)
        }
        return nil
    }
    res["logo"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetLogo(val)
        }
        return nil
    }
    res["name"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetName(val)
        }
        return nil
    }
    res["record"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetRecord(val)
        }
        return nil
    }
    res["updatedAt"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetUpdatedAt(val)
        }
        return nil
    }
    return res
}
// GetId gets the id property value. The id property
// returns a *float64 when successful
func (m *Teams) GetId()(*float64) {
    return m.id
}
// GetLeague gets the league property value. The league property
// returns a *string when successful
func (m *Teams) GetLeague()(*string) {
    return m.league
}
// GetLogo gets the logo property value. The logo property
// returns a *string when successful
func (m *Teams) GetLogo()(*string) {
    return m.logo
}
// GetName gets the name property value. The name property
// returns a *string when successful
func (m *Teams) GetName()(*string) {
    return m.name
}
// GetRecord gets the record property value. The record property
// returns a *string when successful
func (m *Teams) GetRecord()(*string) {
    return m.record
}
// GetUpdatedAt gets the updatedAt property value. The updatedAt property
// returns a *string when successful
func (m *Teams) GetUpdatedAt()(*string) {
    return m.updatedAt
}
// Serialize serializes information the current object
func (m *Teams) Serialize(writer i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.SerializationWriter)(error) {
    {
        err := writer.WriteStringValue("abbreviation", m.GetAbbreviation())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteStringValue("alias", m.GetAlias())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteStringValue("createdAt", m.GetCreatedAt())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteFloat64Value("id", m.GetId())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteStringValue("league", m.GetLeague())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteStringValue("logo", m.GetLogo())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteStringValue("name", m.GetName())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteStringValue("record", m.GetRecord())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteStringValue("updatedAt", m.GetUpdatedAt())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteAdditionalData(m.GetAdditionalData())
        if err != nil {
            return err
        }
    }
    return nil
}
// SetAbbreviation sets the abbreviation property value. The abbreviation property
func (m *Teams) SetAbbreviation(value *string)() {
    m.abbreviation = value
}
// SetAdditionalData sets the AdditionalData property value. Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
func (m *Teams) SetAdditionalData(value map[string]any)() {
    m.additionalData = value
}
// SetAlias sets the alias property value. The alias property
func (m *Teams) SetAlias(value *string)() {
    m.alias = value
}
// SetCreatedAt sets the createdAt property value. The createdAt property
func (m *Teams) SetCreatedAt(value *string)() {
    m.createdAt = value
}
// SetId sets the id property value. The id property
func (m *Teams) SetId(value *float64)() {
    m.id = value
}
// SetLeague sets the league property value. The league property
func (m *Teams) SetLeague(value *string)() {
    m.league = value
}
// SetLogo sets the logo property value. The logo property
func (m *Teams) SetLogo(value *string)() {
    m.logo = value
}
// SetName sets the name property value. The name property
func (m *Teams) SetName(value *string)() {
    m.name = value
}
// SetRecord sets the record property value. The record property
func (m *Teams) SetRecord(value *string)() {
    m.record = value
}
// SetUpdatedAt sets the updatedAt property value. The updatedAt property
func (m *Teams) SetUpdatedAt(value *string)() {
    m.updatedAt = value
}
type Teamsable interface {
    i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.AdditionalDataHolder
    i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.Parsable
    GetAbbreviation()(*string)
    GetAlias()(*string)
    GetCreatedAt()(*string)
    GetId()(*float64)
    GetLeague()(*string)
    GetLogo()(*string)
    GetName()(*string)
    GetRecord()(*string)
    GetUpdatedAt()(*string)
    SetAbbreviation(value *string)()
    SetAlias(value *string)()
    SetCreatedAt(value *string)()
    SetId(value *float64)()
    SetLeague(value *string)()
    SetLogo(value *string)()
    SetName(value *string)()
    SetRecord(value *string)()
    SetUpdatedAt(value *string)()
}
