// Code generated by Microsoft Kiota - DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package gamma

import (
    i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91 "github.com/microsoft/kiota-abstractions-go/serialization"
)

type MarketsItemMarketsGetResponse struct {
    // The active property
    active *bool
    // Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
    additionalData map[string]any
    // The clobTokenIds property
    clobTokenIds []string
    // The closed property
    closed *bool
    // The conditionId property
    conditionId *string
    // The description property
    description *string
    // The events property
    events []MarketsItemMarketsGetResponse_eventsable
    // The hasReviewedDates property
    hasReviewedDates *bool
    // The icon property
    icon *string
    // The id property
    id *string
    // The image property
    image *string
    // The liquidity property
    liquidity *string
    // The liquidityNum property
    liquidityNum *float64
    // The new property
    new *bool
    // The outcomePrices property
    outcomePrices []string
    // The outcomes property
    outcomes []string
    // The question property
    question *string
    // The questionID property
    questionID *string
    // The slug property
    slug *string
    // The startDate property
    startDate *string
    // The startDateIso property
    startDateIso *string
    // The volume property
    volume *string
    // The volume1mo property
    volume1mo *float64
    // The volume1wk property
    volume1wk *float64
    // The volume1yr property
    volume1yr *float64
    // The volume24hr property
    volume24hr *float64
    // The volumeNum property
    volumeNum *float64
}
// NewMarketsItemMarketsGetResponse instantiates a new MarketsItemMarketsGetResponse and sets the default values.
func NewMarketsItemMarketsGetResponse()(*MarketsItemMarketsGetResponse) {
    m := &MarketsItemMarketsGetResponse{
    }
    m.SetAdditionalData(make(map[string]any))
    return m
}
// CreateMarketsItemMarketsGetResponseFromDiscriminatorValue creates a new instance of the appropriate class based on discriminator value
// returns a Parsable when successful
func CreateMarketsItemMarketsGetResponseFromDiscriminatorValue(parseNode i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode)(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.Parsable, error) {
    return NewMarketsItemMarketsGetResponse(), nil
}
// GetActive gets the active property value. The active property
// returns a *bool when successful
func (m *MarketsItemMarketsGetResponse) GetActive()(*bool) {
    return m.active
}
// GetAdditionalData gets the AdditionalData property value. Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
// returns a map[string]any when successful
func (m *MarketsItemMarketsGetResponse) GetAdditionalData()(map[string]any) {
    return m.additionalData
}
// GetClobTokenIds gets the clobTokenIds property value. The clobTokenIds property
// returns a []string when successful
func (m *MarketsItemMarketsGetResponse) GetClobTokenIds()([]string) {
    return m.clobTokenIds
}
// GetClosed gets the closed property value. The closed property
// returns a *bool when successful
func (m *MarketsItemMarketsGetResponse) GetClosed()(*bool) {
    return m.closed
}
// GetConditionId gets the conditionId property value. The conditionId property
// returns a *string when successful
func (m *MarketsItemMarketsGetResponse) GetConditionId()(*string) {
    return m.conditionId
}
// GetDescription gets the description property value. The description property
// returns a *string when successful
func (m *MarketsItemMarketsGetResponse) GetDescription()(*string) {
    return m.description
}
// GetEvents gets the events property value. The events property
// returns a []MarketsItemMarketsGetResponse_eventsable when successful
func (m *MarketsItemMarketsGetResponse) GetEvents()([]MarketsItemMarketsGetResponse_eventsable) {
    return m.events
}
// GetFieldDeserializers the deserialization information for the current model
// returns a map[string]func(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode)(error) when successful
func (m *MarketsItemMarketsGetResponse) GetFieldDeserializers()(map[string]func(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode)(error)) {
    res := make(map[string]func(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode)(error))
    res["active"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetBoolValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetActive(val)
        }
        return nil
    }
    res["clobTokenIds"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetCollectionOfPrimitiveValues("string")
        if err != nil {
            return err
        }
        if val != nil {
            res := make([]string, len(val))
            for i, v := range val {
                if v != nil {
                    res[i] = *(v.(*string))
                }
            }
            m.SetClobTokenIds(res)
        }
        return nil
    }
    res["closed"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetBoolValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetClosed(val)
        }
        return nil
    }
    res["conditionId"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetConditionId(val)
        }
        return nil
    }
    res["description"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetDescription(val)
        }
        return nil
    }
    res["events"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetCollectionOfObjectValues(CreateMarketsItemMarketsGetResponse_eventsFromDiscriminatorValue)
        if err != nil {
            return err
        }
        if val != nil {
            res := make([]MarketsItemMarketsGetResponse_eventsable, len(val))
            for i, v := range val {
                if v != nil {
                    res[i] = v.(MarketsItemMarketsGetResponse_eventsable)
                }
            }
            m.SetEvents(res)
        }
        return nil
    }
    res["hasReviewedDates"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetBoolValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetHasReviewedDates(val)
        }
        return nil
    }
    res["icon"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetIcon(val)
        }
        return nil
    }
    res["id"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetId(val)
        }
        return nil
    }
    res["image"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetImage(val)
        }
        return nil
    }
    res["liquidity"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetLiquidity(val)
        }
        return nil
    }
    res["liquidityNum"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetFloat64Value()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetLiquidityNum(val)
        }
        return nil
    }
    res["new"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetBoolValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetNew(val)
        }
        return nil
    }
    res["outcomePrices"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetCollectionOfPrimitiveValues("string")
        if err != nil {
            return err
        }
        if val != nil {
            res := make([]string, len(val))
            for i, v := range val {
                if v != nil {
                    res[i] = *(v.(*string))
                }
            }
            m.SetOutcomePrices(res)
        }
        return nil
    }
    res["outcomes"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetCollectionOfPrimitiveValues("string")
        if err != nil {
            return err
        }
        if val != nil {
            res := make([]string, len(val))
            for i, v := range val {
                if v != nil {
                    res[i] = *(v.(*string))
                }
            }
            m.SetOutcomes(res)
        }
        return nil
    }
    res["question"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetQuestion(val)
        }
        return nil
    }
    res["questionID"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetQuestionID(val)
        }
        return nil
    }
    res["slug"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetSlug(val)
        }
        return nil
    }
    res["startDate"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetStartDate(val)
        }
        return nil
    }
    res["startDateIso"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetStartDateIso(val)
        }
        return nil
    }
    res["volume"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetVolume(val)
        }
        return nil
    }
    res["volume1mo"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetFloat64Value()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetVolume1mo(val)
        }
        return nil
    }
    res["volume1wk"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetFloat64Value()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetVolume1wk(val)
        }
        return nil
    }
    res["volume1yr"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetFloat64Value()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetVolume1yr(val)
        }
        return nil
    }
    res["volume24hr"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetFloat64Value()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetVolume24hr(val)
        }
        return nil
    }
    res["volumeNum"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetFloat64Value()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetVolumeNum(val)
        }
        return nil
    }
    return res
}
// GetHasReviewedDates gets the hasReviewedDates property value. The hasReviewedDates property
// returns a *bool when successful
func (m *MarketsItemMarketsGetResponse) GetHasReviewedDates()(*bool) {
    return m.hasReviewedDates
}
// GetIcon gets the icon property value. The icon property
// returns a *string when successful
func (m *MarketsItemMarketsGetResponse) GetIcon()(*string) {
    return m.icon
}
// GetId gets the id property value. The id property
// returns a *string when successful
func (m *MarketsItemMarketsGetResponse) GetId()(*string) {
    return m.id
}
// GetImage gets the image property value. The image property
// returns a *string when successful
func (m *MarketsItemMarketsGetResponse) GetImage()(*string) {
    return m.image
}
// GetLiquidity gets the liquidity property value. The liquidity property
// returns a *string when successful
func (m *MarketsItemMarketsGetResponse) GetLiquidity()(*string) {
    return m.liquidity
}
// GetLiquidityNum gets the liquidityNum property value. The liquidityNum property
// returns a *float64 when successful
func (m *MarketsItemMarketsGetResponse) GetLiquidityNum()(*float64) {
    return m.liquidityNum
}
// GetNew gets the new property value. The new property
// returns a *bool when successful
func (m *MarketsItemMarketsGetResponse) GetNew()(*bool) {
    return m.new
}
// GetOutcomePrices gets the outcomePrices property value. The outcomePrices property
// returns a []string when successful
func (m *MarketsItemMarketsGetResponse) GetOutcomePrices()([]string) {
    return m.outcomePrices
}
// GetOutcomes gets the outcomes property value. The outcomes property
// returns a []string when successful
func (m *MarketsItemMarketsGetResponse) GetOutcomes()([]string) {
    return m.outcomes
}
// GetQuestion gets the question property value. The question property
// returns a *string when successful
func (m *MarketsItemMarketsGetResponse) GetQuestion()(*string) {
    return m.question
}
// GetQuestionID gets the questionID property value. The questionID property
// returns a *string when successful
func (m *MarketsItemMarketsGetResponse) GetQuestionID()(*string) {
    return m.questionID
}
// GetSlug gets the slug property value. The slug property
// returns a *string when successful
func (m *MarketsItemMarketsGetResponse) GetSlug()(*string) {
    return m.slug
}
// GetStartDate gets the startDate property value. The startDate property
// returns a *string when successful
func (m *MarketsItemMarketsGetResponse) GetStartDate()(*string) {
    return m.startDate
}
// GetStartDateIso gets the startDateIso property value. The startDateIso property
// returns a *string when successful
func (m *MarketsItemMarketsGetResponse) GetStartDateIso()(*string) {
    return m.startDateIso
}
// GetVolume gets the volume property value. The volume property
// returns a *string when successful
func (m *MarketsItemMarketsGetResponse) GetVolume()(*string) {
    return m.volume
}
// GetVolume1mo gets the volume1mo property value. The volume1mo property
// returns a *float64 when successful
func (m *MarketsItemMarketsGetResponse) GetVolume1mo()(*float64) {
    return m.volume1mo
}
// GetVolume1wk gets the volume1wk property value. The volume1wk property
// returns a *float64 when successful
func (m *MarketsItemMarketsGetResponse) GetVolume1wk()(*float64) {
    return m.volume1wk
}
// GetVolume1yr gets the volume1yr property value. The volume1yr property
// returns a *float64 when successful
func (m *MarketsItemMarketsGetResponse) GetVolume1yr()(*float64) {
    return m.volume1yr
}
// GetVolume24hr gets the volume24hr property value. The volume24hr property
// returns a *float64 when successful
func (m *MarketsItemMarketsGetResponse) GetVolume24hr()(*float64) {
    return m.volume24hr
}
// GetVolumeNum gets the volumeNum property value. The volumeNum property
// returns a *float64 when successful
func (m *MarketsItemMarketsGetResponse) GetVolumeNum()(*float64) {
    return m.volumeNum
}
// Serialize serializes information the current object
func (m *MarketsItemMarketsGetResponse) Serialize(writer i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.SerializationWriter)(error) {
    {
        err := writer.WriteBoolValue("active", m.GetActive())
        if err != nil {
            return err
        }
    }
    if m.GetClobTokenIds() != nil {
        err := writer.WriteCollectionOfStringValues("clobTokenIds", m.GetClobTokenIds())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteBoolValue("closed", m.GetClosed())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteStringValue("conditionId", m.GetConditionId())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteStringValue("description", m.GetDescription())
        if err != nil {
            return err
        }
    }
    if m.GetEvents() != nil {
        cast := make([]i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.Parsable, len(m.GetEvents()))
        for i, v := range m.GetEvents() {
            if v != nil {
                cast[i] = v.(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.Parsable)
            }
        }
        err := writer.WriteCollectionOfObjectValues("events", cast)
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteBoolValue("hasReviewedDates", m.GetHasReviewedDates())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteStringValue("icon", m.GetIcon())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteStringValue("id", m.GetId())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteStringValue("image", m.GetImage())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteStringValue("liquidity", m.GetLiquidity())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteFloat64Value("liquidityNum", m.GetLiquidityNum())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteBoolValue("new", m.GetNew())
        if err != nil {
            return err
        }
    }
    if m.GetOutcomePrices() != nil {
        err := writer.WriteCollectionOfStringValues("outcomePrices", m.GetOutcomePrices())
        if err != nil {
            return err
        }
    }
    if m.GetOutcomes() != nil {
        err := writer.WriteCollectionOfStringValues("outcomes", m.GetOutcomes())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteStringValue("question", m.GetQuestion())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteStringValue("questionID", m.GetQuestionID())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteStringValue("slug", m.GetSlug())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteStringValue("startDate", m.GetStartDate())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteStringValue("startDateIso", m.GetStartDateIso())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteStringValue("volume", m.GetVolume())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteFloat64Value("volume1mo", m.GetVolume1mo())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteFloat64Value("volume1wk", m.GetVolume1wk())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteFloat64Value("volume1yr", m.GetVolume1yr())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteFloat64Value("volume24hr", m.GetVolume24hr())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteFloat64Value("volumeNum", m.GetVolumeNum())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteAdditionalData(m.GetAdditionalData())
        if err != nil {
            return err
        }
    }
    return nil
}
// SetActive sets the active property value. The active property
func (m *MarketsItemMarketsGetResponse) SetActive(value *bool)() {
    m.active = value
}
// SetAdditionalData sets the AdditionalData property value. Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
func (m *MarketsItemMarketsGetResponse) SetAdditionalData(value map[string]any)() {
    m.additionalData = value
}
// SetClobTokenIds sets the clobTokenIds property value. The clobTokenIds property
func (m *MarketsItemMarketsGetResponse) SetClobTokenIds(value []string)() {
    m.clobTokenIds = value
}
// SetClosed sets the closed property value. The closed property
func (m *MarketsItemMarketsGetResponse) SetClosed(value *bool)() {
    m.closed = value
}
// SetConditionId sets the conditionId property value. The conditionId property
func (m *MarketsItemMarketsGetResponse) SetConditionId(value *string)() {
    m.conditionId = value
}
// SetDescription sets the description property value. The description property
func (m *MarketsItemMarketsGetResponse) SetDescription(value *string)() {
    m.description = value
}
// SetEvents sets the events property value. The events property
func (m *MarketsItemMarketsGetResponse) SetEvents(value []MarketsItemMarketsGetResponse_eventsable)() {
    m.events = value
}
// SetHasReviewedDates sets the hasReviewedDates property value. The hasReviewedDates property
func (m *MarketsItemMarketsGetResponse) SetHasReviewedDates(value *bool)() {
    m.hasReviewedDates = value
}
// SetIcon sets the icon property value. The icon property
func (m *MarketsItemMarketsGetResponse) SetIcon(value *string)() {
    m.icon = value
}
// SetId sets the id property value. The id property
func (m *MarketsItemMarketsGetResponse) SetId(value *string)() {
    m.id = value
}
// SetImage sets the image property value. The image property
func (m *MarketsItemMarketsGetResponse) SetImage(value *string)() {
    m.image = value
}
// SetLiquidity sets the liquidity property value. The liquidity property
func (m *MarketsItemMarketsGetResponse) SetLiquidity(value *string)() {
    m.liquidity = value
}
// SetLiquidityNum sets the liquidityNum property value. The liquidityNum property
func (m *MarketsItemMarketsGetResponse) SetLiquidityNum(value *float64)() {
    m.liquidityNum = value
}
// SetNew sets the new property value. The new property
func (m *MarketsItemMarketsGetResponse) SetNew(value *bool)() {
    m.new = value
}
// SetOutcomePrices sets the outcomePrices property value. The outcomePrices property
func (m *MarketsItemMarketsGetResponse) SetOutcomePrices(value []string)() {
    m.outcomePrices = value
}
// SetOutcomes sets the outcomes property value. The outcomes property
func (m *MarketsItemMarketsGetResponse) SetOutcomes(value []string)() {
    m.outcomes = value
}
// SetQuestion sets the question property value. The question property
func (m *MarketsItemMarketsGetResponse) SetQuestion(value *string)() {
    m.question = value
}
// SetQuestionID sets the questionID property value. The questionID property
func (m *MarketsItemMarketsGetResponse) SetQuestionID(value *string)() {
    m.questionID = value
}
// SetSlug sets the slug property value. The slug property
func (m *MarketsItemMarketsGetResponse) SetSlug(value *string)() {
    m.slug = value
}
// SetStartDate sets the startDate property value. The startDate property
func (m *MarketsItemMarketsGetResponse) SetStartDate(value *string)() {
    m.startDate = value
}
// SetStartDateIso sets the startDateIso property value. The startDateIso property
func (m *MarketsItemMarketsGetResponse) SetStartDateIso(value *string)() {
    m.startDateIso = value
}
// SetVolume sets the volume property value. The volume property
func (m *MarketsItemMarketsGetResponse) SetVolume(value *string)() {
    m.volume = value
}
// SetVolume1mo sets the volume1mo property value. The volume1mo property
func (m *MarketsItemMarketsGetResponse) SetVolume1mo(value *float64)() {
    m.volume1mo = value
}
// SetVolume1wk sets the volume1wk property value. The volume1wk property
func (m *MarketsItemMarketsGetResponse) SetVolume1wk(value *float64)() {
    m.volume1wk = value
}
// SetVolume1yr sets the volume1yr property value. The volume1yr property
func (m *MarketsItemMarketsGetResponse) SetVolume1yr(value *float64)() {
    m.volume1yr = value
}
// SetVolume24hr sets the volume24hr property value. The volume24hr property
func (m *MarketsItemMarketsGetResponse) SetVolume24hr(value *float64)() {
    m.volume24hr = value
}
// SetVolumeNum sets the volumeNum property value. The volumeNum property
func (m *MarketsItemMarketsGetResponse) SetVolumeNum(value *float64)() {
    m.volumeNum = value
}
type MarketsItemMarketsGetResponseable interface {
    i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.AdditionalDataHolder
    i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.Parsable
    GetActive()(*bool)
    GetClobTokenIds()([]string)
    GetClosed()(*bool)
    GetConditionId()(*string)
    GetDescription()(*string)
    GetEvents()([]MarketsItemMarketsGetResponse_eventsable)
    GetHasReviewedDates()(*bool)
    GetIcon()(*string)
    GetId()(*string)
    GetImage()(*string)
    GetLiquidity()(*string)
    GetLiquidityNum()(*float64)
    GetNew()(*bool)
    GetOutcomePrices()([]string)
    GetOutcomes()([]string)
    GetQuestion()(*string)
    GetQuestionID()(*string)
    GetSlug()(*string)
    GetStartDate()(*string)
    GetStartDateIso()(*string)
    GetVolume()(*string)
    GetVolume1mo()(*float64)
    GetVolume1wk()(*float64)
    GetVolume1yr()(*float64)
    GetVolume24hr()(*float64)
    GetVolumeNum()(*float64)
    SetActive(value *bool)()
    SetClobTokenIds(value []string)()
    SetClosed(value *bool)()
    SetConditionId(value *string)()
    SetDescription(value *string)()
    SetEvents(value []MarketsItemMarketsGetResponse_eventsable)()
    SetHasReviewedDates(value *bool)()
    SetIcon(value *string)()
    SetId(value *string)()
    SetImage(value *string)()
    SetLiquidity(value *string)()
    SetLiquidityNum(value *float64)()
    SetNew(value *bool)()
    SetOutcomePrices(value []string)()
    SetOutcomes(value []string)()
    SetQuestion(value *string)()
    SetQuestionID(value *string)()
    SetSlug(value *string)()
    SetStartDate(value *string)()
    SetStartDateIso(value *string)()
    SetVolume(value *string)()
    SetVolume1mo(value *float64)()
    SetVolume1wk(value *float64)()
    SetVolume1yr(value *float64)()
    SetVolume24hr(value *float64)()
    SetVolumeNum(value *float64)()
}
