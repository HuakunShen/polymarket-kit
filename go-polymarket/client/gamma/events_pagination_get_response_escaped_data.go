// Code generated by Microsoft Kiota - DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package gamma

import (
    i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91 "github.com/microsoft/kiota-abstractions-go/serialization"
)

type EventsPaginationGetResponse_data struct {
    // The active property
    active *bool
    // Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
    additionalData map[string]any
    // The archived property
    archived *bool
    // The automaticallyActive property
    automaticallyActive *bool
    // The closed property
    closed *bool
    // The commentCount property
    commentCount *float64
    // The competitive property
    competitive *float64
    // The createdAt property
    createdAt *string
    // The creationDate property
    creationDate *string
    // The cyom property
    cyom *bool
    // The deploying property
    deploying *bool
    // The description property
    description *string
    // The enableNegRisk property
    enableNegRisk *bool
    // The enableOrderBook property
    enableOrderBook *bool
    // The endDate property
    endDate *string
    // The featured property
    featured *bool
    // The gmpChartMode property
    gmpChartMode *string
    // The icon property
    icon *string
    // The id property
    id *string
    // The image property
    image *string
    // The liquidity property
    liquidity *float64
    // The liquidityClob property
    liquidityClob *float64
    // The markets property
    markets []EventsPaginationGetResponse_data_marketsable
    // The negRisk property
    negRisk *bool
    // The negRiskAugmented property
    negRiskAugmented *bool
    // The new property
    new *bool
    // The openInterest property
    openInterest *float64
    // The pendingDeployment property
    pendingDeployment *bool
    // The resolutionSource property
    resolutionSource *string
    // The restricted property
    restricted *bool
    // The series property
    series []EventsPaginationGetResponse_data_seriesable
    // The seriesSlug property
    seriesSlug *string
    // The showAllOutcomes property
    showAllOutcomes *bool
    // The showMarketImages property
    showMarketImages *bool
    // The slug property
    slug *string
    // The startDate property
    startDate *string
    // The tags property
    tags []EventsPaginationGetResponse_data_tagsable
    // The ticker property
    ticker *string
    // The title property
    title *string
    // The updatedAt property
    updatedAt *string
    // The volume property
    volume *float64
    // The volume1mo property
    volume1mo *float64
    // The volume1wk property
    volume1wk *float64
    // The volume1yr property
    volume1yr *float64
    // The volume24hr property
    volume24hr *float64
}
// NewEventsPaginationGetResponse_data instantiates a new EventsPaginationGetResponse_data and sets the default values.
func NewEventsPaginationGetResponse_data()(*EventsPaginationGetResponse_data) {
    m := &EventsPaginationGetResponse_data{
    }
    m.SetAdditionalData(make(map[string]any))
    return m
}
// CreateEventsPaginationGetResponse_dataFromDiscriminatorValue creates a new instance of the appropriate class based on discriminator value
// returns a Parsable when successful
func CreateEventsPaginationGetResponse_dataFromDiscriminatorValue(parseNode i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode)(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.Parsable, error) {
    return NewEventsPaginationGetResponse_data(), nil
}
// GetActive gets the active property value. The active property
// returns a *bool when successful
func (m *EventsPaginationGetResponse_data) GetActive()(*bool) {
    return m.active
}
// GetAdditionalData gets the AdditionalData property value. Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
// returns a map[string]any when successful
func (m *EventsPaginationGetResponse_data) GetAdditionalData()(map[string]any) {
    return m.additionalData
}
// GetArchived gets the archived property value. The archived property
// returns a *bool when successful
func (m *EventsPaginationGetResponse_data) GetArchived()(*bool) {
    return m.archived
}
// GetAutomaticallyActive gets the automaticallyActive property value. The automaticallyActive property
// returns a *bool when successful
func (m *EventsPaginationGetResponse_data) GetAutomaticallyActive()(*bool) {
    return m.automaticallyActive
}
// GetClosed gets the closed property value. The closed property
// returns a *bool when successful
func (m *EventsPaginationGetResponse_data) GetClosed()(*bool) {
    return m.closed
}
// GetCommentCount gets the commentCount property value. The commentCount property
// returns a *float64 when successful
func (m *EventsPaginationGetResponse_data) GetCommentCount()(*float64) {
    return m.commentCount
}
// GetCompetitive gets the competitive property value. The competitive property
// returns a *float64 when successful
func (m *EventsPaginationGetResponse_data) GetCompetitive()(*float64) {
    return m.competitive
}
// GetCreatedAt gets the createdAt property value. The createdAt property
// returns a *string when successful
func (m *EventsPaginationGetResponse_data) GetCreatedAt()(*string) {
    return m.createdAt
}
// GetCreationDate gets the creationDate property value. The creationDate property
// returns a *string when successful
func (m *EventsPaginationGetResponse_data) GetCreationDate()(*string) {
    return m.creationDate
}
// GetCyom gets the cyom property value. The cyom property
// returns a *bool when successful
func (m *EventsPaginationGetResponse_data) GetCyom()(*bool) {
    return m.cyom
}
// GetDeploying gets the deploying property value. The deploying property
// returns a *bool when successful
func (m *EventsPaginationGetResponse_data) GetDeploying()(*bool) {
    return m.deploying
}
// GetDescription gets the description property value. The description property
// returns a *string when successful
func (m *EventsPaginationGetResponse_data) GetDescription()(*string) {
    return m.description
}
// GetEnableNegRisk gets the enableNegRisk property value. The enableNegRisk property
// returns a *bool when successful
func (m *EventsPaginationGetResponse_data) GetEnableNegRisk()(*bool) {
    return m.enableNegRisk
}
// GetEnableOrderBook gets the enableOrderBook property value. The enableOrderBook property
// returns a *bool when successful
func (m *EventsPaginationGetResponse_data) GetEnableOrderBook()(*bool) {
    return m.enableOrderBook
}
// GetEndDate gets the endDate property value. The endDate property
// returns a *string when successful
func (m *EventsPaginationGetResponse_data) GetEndDate()(*string) {
    return m.endDate
}
// GetFeatured gets the featured property value. The featured property
// returns a *bool when successful
func (m *EventsPaginationGetResponse_data) GetFeatured()(*bool) {
    return m.featured
}
// GetFieldDeserializers the deserialization information for the current model
// returns a map[string]func(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode)(error) when successful
func (m *EventsPaginationGetResponse_data) GetFieldDeserializers()(map[string]func(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode)(error)) {
    res := make(map[string]func(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode)(error))
    res["active"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetBoolValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetActive(val)
        }
        return nil
    }
    res["archived"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetBoolValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetArchived(val)
        }
        return nil
    }
    res["automaticallyActive"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetBoolValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetAutomaticallyActive(val)
        }
        return nil
    }
    res["closed"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetBoolValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetClosed(val)
        }
        return nil
    }
    res["commentCount"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetFloat64Value()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetCommentCount(val)
        }
        return nil
    }
    res["competitive"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetFloat64Value()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetCompetitive(val)
        }
        return nil
    }
    res["createdAt"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetCreatedAt(val)
        }
        return nil
    }
    res["creationDate"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetCreationDate(val)
        }
        return nil
    }
    res["cyom"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetBoolValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetCyom(val)
        }
        return nil
    }
    res["deploying"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetBoolValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetDeploying(val)
        }
        return nil
    }
    res["description"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetDescription(val)
        }
        return nil
    }
    res["enableNegRisk"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetBoolValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetEnableNegRisk(val)
        }
        return nil
    }
    res["enableOrderBook"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetBoolValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetEnableOrderBook(val)
        }
        return nil
    }
    res["endDate"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetEndDate(val)
        }
        return nil
    }
    res["featured"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetBoolValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetFeatured(val)
        }
        return nil
    }
    res["gmpChartMode"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetGmpChartMode(val)
        }
        return nil
    }
    res["icon"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetIcon(val)
        }
        return nil
    }
    res["id"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetId(val)
        }
        return nil
    }
    res["image"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetImage(val)
        }
        return nil
    }
    res["liquidity"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetFloat64Value()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetLiquidity(val)
        }
        return nil
    }
    res["liquidityClob"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetFloat64Value()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetLiquidityClob(val)
        }
        return nil
    }
    res["markets"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetCollectionOfObjectValues(CreateEventsPaginationGetResponse_data_marketsFromDiscriminatorValue)
        if err != nil {
            return err
        }
        if val != nil {
            res := make([]EventsPaginationGetResponse_data_marketsable, len(val))
            for i, v := range val {
                if v != nil {
                    res[i] = v.(EventsPaginationGetResponse_data_marketsable)
                }
            }
            m.SetMarkets(res)
        }
        return nil
    }
    res["negRisk"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetBoolValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetNegRisk(val)
        }
        return nil
    }
    res["negRiskAugmented"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetBoolValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetNegRiskAugmented(val)
        }
        return nil
    }
    res["new"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetBoolValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetNew(val)
        }
        return nil
    }
    res["openInterest"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetFloat64Value()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetOpenInterest(val)
        }
        return nil
    }
    res["pendingDeployment"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetBoolValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetPendingDeployment(val)
        }
        return nil
    }
    res["resolutionSource"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetResolutionSource(val)
        }
        return nil
    }
    res["restricted"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetBoolValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetRestricted(val)
        }
        return nil
    }
    res["series"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetCollectionOfObjectValues(CreateEventsPaginationGetResponse_data_seriesFromDiscriminatorValue)
        if err != nil {
            return err
        }
        if val != nil {
            res := make([]EventsPaginationGetResponse_data_seriesable, len(val))
            for i, v := range val {
                if v != nil {
                    res[i] = v.(EventsPaginationGetResponse_data_seriesable)
                }
            }
            m.SetSeries(res)
        }
        return nil
    }
    res["seriesSlug"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetSeriesSlug(val)
        }
        return nil
    }
    res["showAllOutcomes"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetBoolValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetShowAllOutcomes(val)
        }
        return nil
    }
    res["showMarketImages"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetBoolValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetShowMarketImages(val)
        }
        return nil
    }
    res["slug"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetSlug(val)
        }
        return nil
    }
    res["startDate"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetStartDate(val)
        }
        return nil
    }
    res["tags"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetCollectionOfObjectValues(CreateEventsPaginationGetResponse_data_tagsFromDiscriminatorValue)
        if err != nil {
            return err
        }
        if val != nil {
            res := make([]EventsPaginationGetResponse_data_tagsable, len(val))
            for i, v := range val {
                if v != nil {
                    res[i] = v.(EventsPaginationGetResponse_data_tagsable)
                }
            }
            m.SetTags(res)
        }
        return nil
    }
    res["ticker"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetTicker(val)
        }
        return nil
    }
    res["title"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetTitle(val)
        }
        return nil
    }
    res["updatedAt"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetUpdatedAt(val)
        }
        return nil
    }
    res["volume"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetFloat64Value()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetVolume(val)
        }
        return nil
    }
    res["volume1mo"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetFloat64Value()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetVolume1mo(val)
        }
        return nil
    }
    res["volume1wk"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetFloat64Value()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetVolume1wk(val)
        }
        return nil
    }
    res["volume1yr"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetFloat64Value()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetVolume1yr(val)
        }
        return nil
    }
    res["volume24hr"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetFloat64Value()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetVolume24hr(val)
        }
        return nil
    }
    return res
}
// GetGmpChartMode gets the gmpChartMode property value. The gmpChartMode property
// returns a *string when successful
func (m *EventsPaginationGetResponse_data) GetGmpChartMode()(*string) {
    return m.gmpChartMode
}
// GetIcon gets the icon property value. The icon property
// returns a *string when successful
func (m *EventsPaginationGetResponse_data) GetIcon()(*string) {
    return m.icon
}
// GetId gets the id property value. The id property
// returns a *string when successful
func (m *EventsPaginationGetResponse_data) GetId()(*string) {
    return m.id
}
// GetImage gets the image property value. The image property
// returns a *string when successful
func (m *EventsPaginationGetResponse_data) GetImage()(*string) {
    return m.image
}
// GetLiquidity gets the liquidity property value. The liquidity property
// returns a *float64 when successful
func (m *EventsPaginationGetResponse_data) GetLiquidity()(*float64) {
    return m.liquidity
}
// GetLiquidityClob gets the liquidityClob property value. The liquidityClob property
// returns a *float64 when successful
func (m *EventsPaginationGetResponse_data) GetLiquidityClob()(*float64) {
    return m.liquidityClob
}
// GetMarkets gets the markets property value. The markets property
// returns a []EventsPaginationGetResponse_data_marketsable when successful
func (m *EventsPaginationGetResponse_data) GetMarkets()([]EventsPaginationGetResponse_data_marketsable) {
    return m.markets
}
// GetNegRisk gets the negRisk property value. The negRisk property
// returns a *bool when successful
func (m *EventsPaginationGetResponse_data) GetNegRisk()(*bool) {
    return m.negRisk
}
// GetNegRiskAugmented gets the negRiskAugmented property value. The negRiskAugmented property
// returns a *bool when successful
func (m *EventsPaginationGetResponse_data) GetNegRiskAugmented()(*bool) {
    return m.negRiskAugmented
}
// GetNew gets the new property value. The new property
// returns a *bool when successful
func (m *EventsPaginationGetResponse_data) GetNew()(*bool) {
    return m.new
}
// GetOpenInterest gets the openInterest property value. The openInterest property
// returns a *float64 when successful
func (m *EventsPaginationGetResponse_data) GetOpenInterest()(*float64) {
    return m.openInterest
}
// GetPendingDeployment gets the pendingDeployment property value. The pendingDeployment property
// returns a *bool when successful
func (m *EventsPaginationGetResponse_data) GetPendingDeployment()(*bool) {
    return m.pendingDeployment
}
// GetResolutionSource gets the resolutionSource property value. The resolutionSource property
// returns a *string when successful
func (m *EventsPaginationGetResponse_data) GetResolutionSource()(*string) {
    return m.resolutionSource
}
// GetRestricted gets the restricted property value. The restricted property
// returns a *bool when successful
func (m *EventsPaginationGetResponse_data) GetRestricted()(*bool) {
    return m.restricted
}
// GetSeries gets the series property value. The series property
// returns a []EventsPaginationGetResponse_data_seriesable when successful
func (m *EventsPaginationGetResponse_data) GetSeries()([]EventsPaginationGetResponse_data_seriesable) {
    return m.series
}
// GetSeriesSlug gets the seriesSlug property value. The seriesSlug property
// returns a *string when successful
func (m *EventsPaginationGetResponse_data) GetSeriesSlug()(*string) {
    return m.seriesSlug
}
// GetShowAllOutcomes gets the showAllOutcomes property value. The showAllOutcomes property
// returns a *bool when successful
func (m *EventsPaginationGetResponse_data) GetShowAllOutcomes()(*bool) {
    return m.showAllOutcomes
}
// GetShowMarketImages gets the showMarketImages property value. The showMarketImages property
// returns a *bool when successful
func (m *EventsPaginationGetResponse_data) GetShowMarketImages()(*bool) {
    return m.showMarketImages
}
// GetSlug gets the slug property value. The slug property
// returns a *string when successful
func (m *EventsPaginationGetResponse_data) GetSlug()(*string) {
    return m.slug
}
// GetStartDate gets the startDate property value. The startDate property
// returns a *string when successful
func (m *EventsPaginationGetResponse_data) GetStartDate()(*string) {
    return m.startDate
}
// GetTags gets the tags property value. The tags property
// returns a []EventsPaginationGetResponse_data_tagsable when successful
func (m *EventsPaginationGetResponse_data) GetTags()([]EventsPaginationGetResponse_data_tagsable) {
    return m.tags
}
// GetTicker gets the ticker property value. The ticker property
// returns a *string when successful
func (m *EventsPaginationGetResponse_data) GetTicker()(*string) {
    return m.ticker
}
// GetTitle gets the title property value. The title property
// returns a *string when successful
func (m *EventsPaginationGetResponse_data) GetTitle()(*string) {
    return m.title
}
// GetUpdatedAt gets the updatedAt property value. The updatedAt property
// returns a *string when successful
func (m *EventsPaginationGetResponse_data) GetUpdatedAt()(*string) {
    return m.updatedAt
}
// GetVolume gets the volume property value. The volume property
// returns a *float64 when successful
func (m *EventsPaginationGetResponse_data) GetVolume()(*float64) {
    return m.volume
}
// GetVolume1mo gets the volume1mo property value. The volume1mo property
// returns a *float64 when successful
func (m *EventsPaginationGetResponse_data) GetVolume1mo()(*float64) {
    return m.volume1mo
}
// GetVolume1wk gets the volume1wk property value. The volume1wk property
// returns a *float64 when successful
func (m *EventsPaginationGetResponse_data) GetVolume1wk()(*float64) {
    return m.volume1wk
}
// GetVolume1yr gets the volume1yr property value. The volume1yr property
// returns a *float64 when successful
func (m *EventsPaginationGetResponse_data) GetVolume1yr()(*float64) {
    return m.volume1yr
}
// GetVolume24hr gets the volume24hr property value. The volume24hr property
// returns a *float64 when successful
func (m *EventsPaginationGetResponse_data) GetVolume24hr()(*float64) {
    return m.volume24hr
}
// Serialize serializes information the current object
func (m *EventsPaginationGetResponse_data) Serialize(writer i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.SerializationWriter)(error) {
    {
        err := writer.WriteBoolValue("active", m.GetActive())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteBoolValue("archived", m.GetArchived())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteBoolValue("automaticallyActive", m.GetAutomaticallyActive())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteBoolValue("closed", m.GetClosed())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteFloat64Value("commentCount", m.GetCommentCount())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteFloat64Value("competitive", m.GetCompetitive())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteStringValue("createdAt", m.GetCreatedAt())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteStringValue("creationDate", m.GetCreationDate())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteBoolValue("cyom", m.GetCyom())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteBoolValue("deploying", m.GetDeploying())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteStringValue("description", m.GetDescription())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteBoolValue("enableNegRisk", m.GetEnableNegRisk())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteBoolValue("enableOrderBook", m.GetEnableOrderBook())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteStringValue("endDate", m.GetEndDate())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteBoolValue("featured", m.GetFeatured())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteStringValue("gmpChartMode", m.GetGmpChartMode())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteStringValue("icon", m.GetIcon())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteStringValue("id", m.GetId())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteStringValue("image", m.GetImage())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteFloat64Value("liquidity", m.GetLiquidity())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteFloat64Value("liquidityClob", m.GetLiquidityClob())
        if err != nil {
            return err
        }
    }
    if m.GetMarkets() != nil {
        cast := make([]i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.Parsable, len(m.GetMarkets()))
        for i, v := range m.GetMarkets() {
            if v != nil {
                cast[i] = v.(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.Parsable)
            }
        }
        err := writer.WriteCollectionOfObjectValues("markets", cast)
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteBoolValue("negRisk", m.GetNegRisk())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteBoolValue("negRiskAugmented", m.GetNegRiskAugmented())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteBoolValue("new", m.GetNew())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteFloat64Value("openInterest", m.GetOpenInterest())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteBoolValue("pendingDeployment", m.GetPendingDeployment())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteStringValue("resolutionSource", m.GetResolutionSource())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteBoolValue("restricted", m.GetRestricted())
        if err != nil {
            return err
        }
    }
    if m.GetSeries() != nil {
        cast := make([]i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.Parsable, len(m.GetSeries()))
        for i, v := range m.GetSeries() {
            if v != nil {
                cast[i] = v.(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.Parsable)
            }
        }
        err := writer.WriteCollectionOfObjectValues("series", cast)
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteStringValue("seriesSlug", m.GetSeriesSlug())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteBoolValue("showAllOutcomes", m.GetShowAllOutcomes())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteBoolValue("showMarketImages", m.GetShowMarketImages())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteStringValue("slug", m.GetSlug())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteStringValue("startDate", m.GetStartDate())
        if err != nil {
            return err
        }
    }
    if m.GetTags() != nil {
        cast := make([]i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.Parsable, len(m.GetTags()))
        for i, v := range m.GetTags() {
            if v != nil {
                cast[i] = v.(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.Parsable)
            }
        }
        err := writer.WriteCollectionOfObjectValues("tags", cast)
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteStringValue("ticker", m.GetTicker())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteStringValue("title", m.GetTitle())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteStringValue("updatedAt", m.GetUpdatedAt())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteFloat64Value("volume", m.GetVolume())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteFloat64Value("volume1mo", m.GetVolume1mo())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteFloat64Value("volume1wk", m.GetVolume1wk())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteFloat64Value("volume1yr", m.GetVolume1yr())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteFloat64Value("volume24hr", m.GetVolume24hr())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteAdditionalData(m.GetAdditionalData())
        if err != nil {
            return err
        }
    }
    return nil
}
// SetActive sets the active property value. The active property
func (m *EventsPaginationGetResponse_data) SetActive(value *bool)() {
    m.active = value
}
// SetAdditionalData sets the AdditionalData property value. Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
func (m *EventsPaginationGetResponse_data) SetAdditionalData(value map[string]any)() {
    m.additionalData = value
}
// SetArchived sets the archived property value. The archived property
func (m *EventsPaginationGetResponse_data) SetArchived(value *bool)() {
    m.archived = value
}
// SetAutomaticallyActive sets the automaticallyActive property value. The automaticallyActive property
func (m *EventsPaginationGetResponse_data) SetAutomaticallyActive(value *bool)() {
    m.automaticallyActive = value
}
// SetClosed sets the closed property value. The closed property
func (m *EventsPaginationGetResponse_data) SetClosed(value *bool)() {
    m.closed = value
}
// SetCommentCount sets the commentCount property value. The commentCount property
func (m *EventsPaginationGetResponse_data) SetCommentCount(value *float64)() {
    m.commentCount = value
}
// SetCompetitive sets the competitive property value. The competitive property
func (m *EventsPaginationGetResponse_data) SetCompetitive(value *float64)() {
    m.competitive = value
}
// SetCreatedAt sets the createdAt property value. The createdAt property
func (m *EventsPaginationGetResponse_data) SetCreatedAt(value *string)() {
    m.createdAt = value
}
// SetCreationDate sets the creationDate property value. The creationDate property
func (m *EventsPaginationGetResponse_data) SetCreationDate(value *string)() {
    m.creationDate = value
}
// SetCyom sets the cyom property value. The cyom property
func (m *EventsPaginationGetResponse_data) SetCyom(value *bool)() {
    m.cyom = value
}
// SetDeploying sets the deploying property value. The deploying property
func (m *EventsPaginationGetResponse_data) SetDeploying(value *bool)() {
    m.deploying = value
}
// SetDescription sets the description property value. The description property
func (m *EventsPaginationGetResponse_data) SetDescription(value *string)() {
    m.description = value
}
// SetEnableNegRisk sets the enableNegRisk property value. The enableNegRisk property
func (m *EventsPaginationGetResponse_data) SetEnableNegRisk(value *bool)() {
    m.enableNegRisk = value
}
// SetEnableOrderBook sets the enableOrderBook property value. The enableOrderBook property
func (m *EventsPaginationGetResponse_data) SetEnableOrderBook(value *bool)() {
    m.enableOrderBook = value
}
// SetEndDate sets the endDate property value. The endDate property
func (m *EventsPaginationGetResponse_data) SetEndDate(value *string)() {
    m.endDate = value
}
// SetFeatured sets the featured property value. The featured property
func (m *EventsPaginationGetResponse_data) SetFeatured(value *bool)() {
    m.featured = value
}
// SetGmpChartMode sets the gmpChartMode property value. The gmpChartMode property
func (m *EventsPaginationGetResponse_data) SetGmpChartMode(value *string)() {
    m.gmpChartMode = value
}
// SetIcon sets the icon property value. The icon property
func (m *EventsPaginationGetResponse_data) SetIcon(value *string)() {
    m.icon = value
}
// SetId sets the id property value. The id property
func (m *EventsPaginationGetResponse_data) SetId(value *string)() {
    m.id = value
}
// SetImage sets the image property value. The image property
func (m *EventsPaginationGetResponse_data) SetImage(value *string)() {
    m.image = value
}
// SetLiquidity sets the liquidity property value. The liquidity property
func (m *EventsPaginationGetResponse_data) SetLiquidity(value *float64)() {
    m.liquidity = value
}
// SetLiquidityClob sets the liquidityClob property value. The liquidityClob property
func (m *EventsPaginationGetResponse_data) SetLiquidityClob(value *float64)() {
    m.liquidityClob = value
}
// SetMarkets sets the markets property value. The markets property
func (m *EventsPaginationGetResponse_data) SetMarkets(value []EventsPaginationGetResponse_data_marketsable)() {
    m.markets = value
}
// SetNegRisk sets the negRisk property value. The negRisk property
func (m *EventsPaginationGetResponse_data) SetNegRisk(value *bool)() {
    m.negRisk = value
}
// SetNegRiskAugmented sets the negRiskAugmented property value. The negRiskAugmented property
func (m *EventsPaginationGetResponse_data) SetNegRiskAugmented(value *bool)() {
    m.negRiskAugmented = value
}
// SetNew sets the new property value. The new property
func (m *EventsPaginationGetResponse_data) SetNew(value *bool)() {
    m.new = value
}
// SetOpenInterest sets the openInterest property value. The openInterest property
func (m *EventsPaginationGetResponse_data) SetOpenInterest(value *float64)() {
    m.openInterest = value
}
// SetPendingDeployment sets the pendingDeployment property value. The pendingDeployment property
func (m *EventsPaginationGetResponse_data) SetPendingDeployment(value *bool)() {
    m.pendingDeployment = value
}
// SetResolutionSource sets the resolutionSource property value. The resolutionSource property
func (m *EventsPaginationGetResponse_data) SetResolutionSource(value *string)() {
    m.resolutionSource = value
}
// SetRestricted sets the restricted property value. The restricted property
func (m *EventsPaginationGetResponse_data) SetRestricted(value *bool)() {
    m.restricted = value
}
// SetSeries sets the series property value. The series property
func (m *EventsPaginationGetResponse_data) SetSeries(value []EventsPaginationGetResponse_data_seriesable)() {
    m.series = value
}
// SetSeriesSlug sets the seriesSlug property value. The seriesSlug property
func (m *EventsPaginationGetResponse_data) SetSeriesSlug(value *string)() {
    m.seriesSlug = value
}
// SetShowAllOutcomes sets the showAllOutcomes property value. The showAllOutcomes property
func (m *EventsPaginationGetResponse_data) SetShowAllOutcomes(value *bool)() {
    m.showAllOutcomes = value
}
// SetShowMarketImages sets the showMarketImages property value. The showMarketImages property
func (m *EventsPaginationGetResponse_data) SetShowMarketImages(value *bool)() {
    m.showMarketImages = value
}
// SetSlug sets the slug property value. The slug property
func (m *EventsPaginationGetResponse_data) SetSlug(value *string)() {
    m.slug = value
}
// SetStartDate sets the startDate property value. The startDate property
func (m *EventsPaginationGetResponse_data) SetStartDate(value *string)() {
    m.startDate = value
}
// SetTags sets the tags property value. The tags property
func (m *EventsPaginationGetResponse_data) SetTags(value []EventsPaginationGetResponse_data_tagsable)() {
    m.tags = value
}
// SetTicker sets the ticker property value. The ticker property
func (m *EventsPaginationGetResponse_data) SetTicker(value *string)() {
    m.ticker = value
}
// SetTitle sets the title property value. The title property
func (m *EventsPaginationGetResponse_data) SetTitle(value *string)() {
    m.title = value
}
// SetUpdatedAt sets the updatedAt property value. The updatedAt property
func (m *EventsPaginationGetResponse_data) SetUpdatedAt(value *string)() {
    m.updatedAt = value
}
// SetVolume sets the volume property value. The volume property
func (m *EventsPaginationGetResponse_data) SetVolume(value *float64)() {
    m.volume = value
}
// SetVolume1mo sets the volume1mo property value. The volume1mo property
func (m *EventsPaginationGetResponse_data) SetVolume1mo(value *float64)() {
    m.volume1mo = value
}
// SetVolume1wk sets the volume1wk property value. The volume1wk property
func (m *EventsPaginationGetResponse_data) SetVolume1wk(value *float64)() {
    m.volume1wk = value
}
// SetVolume1yr sets the volume1yr property value. The volume1yr property
func (m *EventsPaginationGetResponse_data) SetVolume1yr(value *float64)() {
    m.volume1yr = value
}
// SetVolume24hr sets the volume24hr property value. The volume24hr property
func (m *EventsPaginationGetResponse_data) SetVolume24hr(value *float64)() {
    m.volume24hr = value
}
type EventsPaginationGetResponse_dataable interface {
    i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.AdditionalDataHolder
    i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.Parsable
    GetActive()(*bool)
    GetArchived()(*bool)
    GetAutomaticallyActive()(*bool)
    GetClosed()(*bool)
    GetCommentCount()(*float64)
    GetCompetitive()(*float64)
    GetCreatedAt()(*string)
    GetCreationDate()(*string)
    GetCyom()(*bool)
    GetDeploying()(*bool)
    GetDescription()(*string)
    GetEnableNegRisk()(*bool)
    GetEnableOrderBook()(*bool)
    GetEndDate()(*string)
    GetFeatured()(*bool)
    GetGmpChartMode()(*string)
    GetIcon()(*string)
    GetId()(*string)
    GetImage()(*string)
    GetLiquidity()(*float64)
    GetLiquidityClob()(*float64)
    GetMarkets()([]EventsPaginationGetResponse_data_marketsable)
    GetNegRisk()(*bool)
    GetNegRiskAugmented()(*bool)
    GetNew()(*bool)
    GetOpenInterest()(*float64)
    GetPendingDeployment()(*bool)
    GetResolutionSource()(*string)
    GetRestricted()(*bool)
    GetSeries()([]EventsPaginationGetResponse_data_seriesable)
    GetSeriesSlug()(*string)
    GetShowAllOutcomes()(*bool)
    GetShowMarketImages()(*bool)
    GetSlug()(*string)
    GetStartDate()(*string)
    GetTags()([]EventsPaginationGetResponse_data_tagsable)
    GetTicker()(*string)
    GetTitle()(*string)
    GetUpdatedAt()(*string)
    GetVolume()(*float64)
    GetVolume1mo()(*float64)
    GetVolume1wk()(*float64)
    GetVolume1yr()(*float64)
    GetVolume24hr()(*float64)
    SetActive(value *bool)()
    SetArchived(value *bool)()
    SetAutomaticallyActive(value *bool)()
    SetClosed(value *bool)()
    SetCommentCount(value *float64)()
    SetCompetitive(value *float64)()
    SetCreatedAt(value *string)()
    SetCreationDate(value *string)()
    SetCyom(value *bool)()
    SetDeploying(value *bool)()
    SetDescription(value *string)()
    SetEnableNegRisk(value *bool)()
    SetEnableOrderBook(value *bool)()
    SetEndDate(value *string)()
    SetFeatured(value *bool)()
    SetGmpChartMode(value *string)()
    SetIcon(value *string)()
    SetId(value *string)()
    SetImage(value *string)()
    SetLiquidity(value *float64)()
    SetLiquidityClob(value *float64)()
    SetMarkets(value []EventsPaginationGetResponse_data_marketsable)()
    SetNegRisk(value *bool)()
    SetNegRiskAugmented(value *bool)()
    SetNew(value *bool)()
    SetOpenInterest(value *float64)()
    SetPendingDeployment(value *bool)()
    SetResolutionSource(value *string)()
    SetRestricted(value *bool)()
    SetSeries(value []EventsPaginationGetResponse_data_seriesable)()
    SetSeriesSlug(value *string)()
    SetShowAllOutcomes(value *bool)()
    SetShowMarketImages(value *bool)()
    SetSlug(value *string)()
    SetStartDate(value *string)()
    SetTags(value []EventsPaginationGetResponse_data_tagsable)()
    SetTicker(value *string)()
    SetTitle(value *string)()
    SetUpdatedAt(value *string)()
    SetVolume(value *float64)()
    SetVolume1mo(value *float64)()
    SetVolume1wk(value *float64)()
    SetVolume1yr(value *float64)()
    SetVolume24hr(value *float64)()
}
