// Code generated by Microsoft Kiota - DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package gamma

import (
    "context"
    i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f "github.com/microsoft/kiota-abstractions-go"
)

// SeriesSeriesItemRequestBuilder builds and executes requests for operations under \gamma\series\{id}
type SeriesSeriesItemRequestBuilder struct {
    i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f.BaseRequestBuilder
}
// SeriesSeriesItemRequestBuilderGetQueryParameters retrieve a specific series by its ID
type SeriesSeriesItemRequestBuilderGetQueryParameters struct {
    Include_chat *bool `uriparametername:"include_chat"`
}
// SeriesSeriesItemRequestBuilderGetRequestConfiguration configuration for the request such as headers, query parameters, and middleware options.
type SeriesSeriesItemRequestBuilderGetRequestConfiguration struct {
    // Request headers
    Headers *i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f.RequestHeaders
    // Request options
    Options []i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f.RequestOption
    // Request query parameters
    QueryParameters *SeriesSeriesItemRequestBuilderGetQueryParameters
}
// NewSeriesSeriesItemRequestBuilderInternal instantiates a new SeriesSeriesItemRequestBuilder and sets the default values.
func NewSeriesSeriesItemRequestBuilderInternal(pathParameters map[string]string, requestAdapter i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f.RequestAdapter)(*SeriesSeriesItemRequestBuilder) {
    m := &SeriesSeriesItemRequestBuilder{
        BaseRequestBuilder: *i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f.NewBaseRequestBuilder(requestAdapter, "{+baseurl}/gamma/series/{id}{?include_chat*}", pathParameters),
    }
    return m
}
// NewSeriesSeriesItemRequestBuilder instantiates a new SeriesSeriesItemRequestBuilder and sets the default values.
func NewSeriesSeriesItemRequestBuilder(rawUrl string, requestAdapter i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f.RequestAdapter)(*SeriesSeriesItemRequestBuilder) {
    urlParams := make(map[string]string)
    urlParams["request-raw-url"] = rawUrl
    return NewSeriesSeriesItemRequestBuilderInternal(urlParams, requestAdapter)
}
// Get retrieve a specific series by its ID
// Deprecated: This method is obsolete. Use GetAsSeriesGetResponse instead.
// returns a SeriesItemSeriesResponseable when successful
// returns a SeriesItemSeries404Error error when the service returns a 404 status code
// returns a SeriesItemSeries500Error error when the service returns a 500 status code
func (m *SeriesSeriesItemRequestBuilder) Get(ctx context.Context, requestConfiguration *SeriesSeriesItemRequestBuilderGetRequestConfiguration)(SeriesItemSeriesResponseable, error) {
    requestInfo, err := m.ToGetRequestInformation(ctx, requestConfiguration);
    if err != nil {
        return nil, err
    }
    errorMapping := i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f.ErrorMappings {
        "404": CreateSeriesItemSeries404ErrorFromDiscriminatorValue,
        "500": CreateSeriesItemSeries500ErrorFromDiscriminatorValue,
    }
    res, err := m.BaseRequestBuilder.RequestAdapter.Send(ctx, requestInfo, CreateSeriesItemSeriesResponseFromDiscriminatorValue, errorMapping)
    if err != nil {
        return nil, err
    }
    if res == nil {
        return nil, nil
    }
    return res.(SeriesItemSeriesResponseable), nil
}
// GetAsSeriesGetResponse retrieve a specific series by its ID
// returns a SeriesItemSeriesGetResponseable when successful
// returns a SeriesItemSeries404Error error when the service returns a 404 status code
// returns a SeriesItemSeries500Error error when the service returns a 500 status code
func (m *SeriesSeriesItemRequestBuilder) GetAsSeriesGetResponse(ctx context.Context, requestConfiguration *SeriesSeriesItemRequestBuilderGetRequestConfiguration)(SeriesItemSeriesGetResponseable, error) {
    requestInfo, err := m.ToGetRequestInformation(ctx, requestConfiguration);
    if err != nil {
        return nil, err
    }
    errorMapping := i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f.ErrorMappings {
        "404": CreateSeriesItemSeries404ErrorFromDiscriminatorValue,
        "500": CreateSeriesItemSeries500ErrorFromDiscriminatorValue,
    }
    res, err := m.BaseRequestBuilder.RequestAdapter.Send(ctx, requestInfo, CreateSeriesItemSeriesGetResponseFromDiscriminatorValue, errorMapping)
    if err != nil {
        return nil, err
    }
    if res == nil {
        return nil, nil
    }
    return res.(SeriesItemSeriesGetResponseable), nil
}
// ToGetRequestInformation retrieve a specific series by its ID
// returns a *RequestInformation when successful
func (m *SeriesSeriesItemRequestBuilder) ToGetRequestInformation(ctx context.Context, requestConfiguration *SeriesSeriesItemRequestBuilderGetRequestConfiguration)(*i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f.RequestInformation, error) {
    requestInfo := i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f.NewRequestInformationWithMethodAndUrlTemplateAndPathParameters(i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f.GET, m.BaseRequestBuilder.UrlTemplate, m.BaseRequestBuilder.PathParameters)
    if requestConfiguration != nil {
        if requestConfiguration.QueryParameters != nil {
            requestInfo.AddQueryParameters(*(requestConfiguration.QueryParameters))
        }
        requestInfo.Headers.AddAll(requestConfiguration.Headers)
        requestInfo.AddRequestOptions(requestConfiguration.Options)
    }
    requestInfo.Headers.TryAdd("Accept", "application/json")
    return requestInfo, nil
}
// WithUrl returns a request builder with the provided arbitrary URL. Using this method means any other path or query parameters are ignored.
// returns a *SeriesSeriesItemRequestBuilder when successful
func (m *SeriesSeriesItemRequestBuilder) WithUrl(rawUrl string)(*SeriesSeriesItemRequestBuilder) {
    return NewSeriesSeriesItemRequestBuilder(rawUrl, m.BaseRequestBuilder.RequestAdapter);
}
