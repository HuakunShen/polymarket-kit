// Code generated by Microsoft Kiota - DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package gamma

import (
    i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91 "github.com/microsoft/kiota-abstractions-go/serialization"
)

type EventsItemEventsGetResponse_series struct {
    // The active property
    active *bool
    // Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
    additionalData map[string]any
    // The archived property
    archived *bool
    // The cgAssetName property
    cgAssetName *string
    // The closed property
    closed *bool
    // The commentCount property
    commentCount *float64
    // The competitive property
    competitive *string
    // The createdAt property
    createdAt *string
    // The icon property
    icon *string
    // The id property
    id *string
    // The image property
    image *string
    // The liquidity property
    liquidity *float64
    // The pythTokenID property
    pythTokenID *string
    // The recurrence property
    recurrence *string
    // The seriesType property
    seriesType *string
    // The slug property
    slug *string
    // The startDate property
    startDate *string
    // The subtitle property
    subtitle *string
    // The ticker property
    ticker *string
    // The title property
    title *string
    // The updatedAt property
    updatedAt *string
    // The volume property
    volume *float64
    // The volume24hr property
    volume24hr *float64
}
// NewEventsItemEventsGetResponse_series instantiates a new EventsItemEventsGetResponse_series and sets the default values.
func NewEventsItemEventsGetResponse_series()(*EventsItemEventsGetResponse_series) {
    m := &EventsItemEventsGetResponse_series{
    }
    m.SetAdditionalData(make(map[string]any))
    return m
}
// CreateEventsItemEventsGetResponse_seriesFromDiscriminatorValue creates a new instance of the appropriate class based on discriminator value
// returns a Parsable when successful
func CreateEventsItemEventsGetResponse_seriesFromDiscriminatorValue(parseNode i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode)(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.Parsable, error) {
    return NewEventsItemEventsGetResponse_series(), nil
}
// GetActive gets the active property value. The active property
// returns a *bool when successful
func (m *EventsItemEventsGetResponse_series) GetActive()(*bool) {
    return m.active
}
// GetAdditionalData gets the AdditionalData property value. Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
// returns a map[string]any when successful
func (m *EventsItemEventsGetResponse_series) GetAdditionalData()(map[string]any) {
    return m.additionalData
}
// GetArchived gets the archived property value. The archived property
// returns a *bool when successful
func (m *EventsItemEventsGetResponse_series) GetArchived()(*bool) {
    return m.archived
}
// GetCgAssetName gets the cgAssetName property value. The cgAssetName property
// returns a *string when successful
func (m *EventsItemEventsGetResponse_series) GetCgAssetName()(*string) {
    return m.cgAssetName
}
// GetClosed gets the closed property value. The closed property
// returns a *bool when successful
func (m *EventsItemEventsGetResponse_series) GetClosed()(*bool) {
    return m.closed
}
// GetCommentCount gets the commentCount property value. The commentCount property
// returns a *float64 when successful
func (m *EventsItemEventsGetResponse_series) GetCommentCount()(*float64) {
    return m.commentCount
}
// GetCompetitive gets the competitive property value. The competitive property
// returns a *string when successful
func (m *EventsItemEventsGetResponse_series) GetCompetitive()(*string) {
    return m.competitive
}
// GetCreatedAt gets the createdAt property value. The createdAt property
// returns a *string when successful
func (m *EventsItemEventsGetResponse_series) GetCreatedAt()(*string) {
    return m.createdAt
}
// GetFieldDeserializers the deserialization information for the current model
// returns a map[string]func(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode)(error) when successful
func (m *EventsItemEventsGetResponse_series) GetFieldDeserializers()(map[string]func(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode)(error)) {
    res := make(map[string]func(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode)(error))
    res["active"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetBoolValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetActive(val)
        }
        return nil
    }
    res["archived"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetBoolValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetArchived(val)
        }
        return nil
    }
    res["cgAssetName"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetCgAssetName(val)
        }
        return nil
    }
    res["closed"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetBoolValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetClosed(val)
        }
        return nil
    }
    res["commentCount"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetFloat64Value()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetCommentCount(val)
        }
        return nil
    }
    res["competitive"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetCompetitive(val)
        }
        return nil
    }
    res["createdAt"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetCreatedAt(val)
        }
        return nil
    }
    res["icon"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetIcon(val)
        }
        return nil
    }
    res["id"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetId(val)
        }
        return nil
    }
    res["image"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetImage(val)
        }
        return nil
    }
    res["liquidity"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetFloat64Value()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetLiquidity(val)
        }
        return nil
    }
    res["pythTokenID"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetPythTokenID(val)
        }
        return nil
    }
    res["recurrence"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetRecurrence(val)
        }
        return nil
    }
    res["seriesType"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetSeriesType(val)
        }
        return nil
    }
    res["slug"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetSlug(val)
        }
        return nil
    }
    res["startDate"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetStartDate(val)
        }
        return nil
    }
    res["subtitle"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetSubtitle(val)
        }
        return nil
    }
    res["ticker"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetTicker(val)
        }
        return nil
    }
    res["title"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetTitle(val)
        }
        return nil
    }
    res["updatedAt"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetUpdatedAt(val)
        }
        return nil
    }
    res["volume"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetFloat64Value()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetVolume(val)
        }
        return nil
    }
    res["volume24hr"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetFloat64Value()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetVolume24hr(val)
        }
        return nil
    }
    return res
}
// GetIcon gets the icon property value. The icon property
// returns a *string when successful
func (m *EventsItemEventsGetResponse_series) GetIcon()(*string) {
    return m.icon
}
// GetId gets the id property value. The id property
// returns a *string when successful
func (m *EventsItemEventsGetResponse_series) GetId()(*string) {
    return m.id
}
// GetImage gets the image property value. The image property
// returns a *string when successful
func (m *EventsItemEventsGetResponse_series) GetImage()(*string) {
    return m.image
}
// GetLiquidity gets the liquidity property value. The liquidity property
// returns a *float64 when successful
func (m *EventsItemEventsGetResponse_series) GetLiquidity()(*float64) {
    return m.liquidity
}
// GetPythTokenID gets the pythTokenID property value. The pythTokenID property
// returns a *string when successful
func (m *EventsItemEventsGetResponse_series) GetPythTokenID()(*string) {
    return m.pythTokenID
}
// GetRecurrence gets the recurrence property value. The recurrence property
// returns a *string when successful
func (m *EventsItemEventsGetResponse_series) GetRecurrence()(*string) {
    return m.recurrence
}
// GetSeriesType gets the seriesType property value. The seriesType property
// returns a *string when successful
func (m *EventsItemEventsGetResponse_series) GetSeriesType()(*string) {
    return m.seriesType
}
// GetSlug gets the slug property value. The slug property
// returns a *string when successful
func (m *EventsItemEventsGetResponse_series) GetSlug()(*string) {
    return m.slug
}
// GetStartDate gets the startDate property value. The startDate property
// returns a *string when successful
func (m *EventsItemEventsGetResponse_series) GetStartDate()(*string) {
    return m.startDate
}
// GetSubtitle gets the subtitle property value. The subtitle property
// returns a *string when successful
func (m *EventsItemEventsGetResponse_series) GetSubtitle()(*string) {
    return m.subtitle
}
// GetTicker gets the ticker property value. The ticker property
// returns a *string when successful
func (m *EventsItemEventsGetResponse_series) GetTicker()(*string) {
    return m.ticker
}
// GetTitle gets the title property value. The title property
// returns a *string when successful
func (m *EventsItemEventsGetResponse_series) GetTitle()(*string) {
    return m.title
}
// GetUpdatedAt gets the updatedAt property value. The updatedAt property
// returns a *string when successful
func (m *EventsItemEventsGetResponse_series) GetUpdatedAt()(*string) {
    return m.updatedAt
}
// GetVolume gets the volume property value. The volume property
// returns a *float64 when successful
func (m *EventsItemEventsGetResponse_series) GetVolume()(*float64) {
    return m.volume
}
// GetVolume24hr gets the volume24hr property value. The volume24hr property
// returns a *float64 when successful
func (m *EventsItemEventsGetResponse_series) GetVolume24hr()(*float64) {
    return m.volume24hr
}
// Serialize serializes information the current object
func (m *EventsItemEventsGetResponse_series) Serialize(writer i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.SerializationWriter)(error) {
    {
        err := writer.WriteBoolValue("active", m.GetActive())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteBoolValue("archived", m.GetArchived())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteStringValue("cgAssetName", m.GetCgAssetName())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteBoolValue("closed", m.GetClosed())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteFloat64Value("commentCount", m.GetCommentCount())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteStringValue("competitive", m.GetCompetitive())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteStringValue("createdAt", m.GetCreatedAt())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteStringValue("icon", m.GetIcon())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteStringValue("id", m.GetId())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteStringValue("image", m.GetImage())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteFloat64Value("liquidity", m.GetLiquidity())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteStringValue("pythTokenID", m.GetPythTokenID())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteStringValue("recurrence", m.GetRecurrence())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteStringValue("seriesType", m.GetSeriesType())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteStringValue("slug", m.GetSlug())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteStringValue("startDate", m.GetStartDate())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteStringValue("subtitle", m.GetSubtitle())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteStringValue("ticker", m.GetTicker())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteStringValue("title", m.GetTitle())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteStringValue("updatedAt", m.GetUpdatedAt())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteFloat64Value("volume", m.GetVolume())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteFloat64Value("volume24hr", m.GetVolume24hr())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteAdditionalData(m.GetAdditionalData())
        if err != nil {
            return err
        }
    }
    return nil
}
// SetActive sets the active property value. The active property
func (m *EventsItemEventsGetResponse_series) SetActive(value *bool)() {
    m.active = value
}
// SetAdditionalData sets the AdditionalData property value. Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
func (m *EventsItemEventsGetResponse_series) SetAdditionalData(value map[string]any)() {
    m.additionalData = value
}
// SetArchived sets the archived property value. The archived property
func (m *EventsItemEventsGetResponse_series) SetArchived(value *bool)() {
    m.archived = value
}
// SetCgAssetName sets the cgAssetName property value. The cgAssetName property
func (m *EventsItemEventsGetResponse_series) SetCgAssetName(value *string)() {
    m.cgAssetName = value
}
// SetClosed sets the closed property value. The closed property
func (m *EventsItemEventsGetResponse_series) SetClosed(value *bool)() {
    m.closed = value
}
// SetCommentCount sets the commentCount property value. The commentCount property
func (m *EventsItemEventsGetResponse_series) SetCommentCount(value *float64)() {
    m.commentCount = value
}
// SetCompetitive sets the competitive property value. The competitive property
func (m *EventsItemEventsGetResponse_series) SetCompetitive(value *string)() {
    m.competitive = value
}
// SetCreatedAt sets the createdAt property value. The createdAt property
func (m *EventsItemEventsGetResponse_series) SetCreatedAt(value *string)() {
    m.createdAt = value
}
// SetIcon sets the icon property value. The icon property
func (m *EventsItemEventsGetResponse_series) SetIcon(value *string)() {
    m.icon = value
}
// SetId sets the id property value. The id property
func (m *EventsItemEventsGetResponse_series) SetId(value *string)() {
    m.id = value
}
// SetImage sets the image property value. The image property
func (m *EventsItemEventsGetResponse_series) SetImage(value *string)() {
    m.image = value
}
// SetLiquidity sets the liquidity property value. The liquidity property
func (m *EventsItemEventsGetResponse_series) SetLiquidity(value *float64)() {
    m.liquidity = value
}
// SetPythTokenID sets the pythTokenID property value. The pythTokenID property
func (m *EventsItemEventsGetResponse_series) SetPythTokenID(value *string)() {
    m.pythTokenID = value
}
// SetRecurrence sets the recurrence property value. The recurrence property
func (m *EventsItemEventsGetResponse_series) SetRecurrence(value *string)() {
    m.recurrence = value
}
// SetSeriesType sets the seriesType property value. The seriesType property
func (m *EventsItemEventsGetResponse_series) SetSeriesType(value *string)() {
    m.seriesType = value
}
// SetSlug sets the slug property value. The slug property
func (m *EventsItemEventsGetResponse_series) SetSlug(value *string)() {
    m.slug = value
}
// SetStartDate sets the startDate property value. The startDate property
func (m *EventsItemEventsGetResponse_series) SetStartDate(value *string)() {
    m.startDate = value
}
// SetSubtitle sets the subtitle property value. The subtitle property
func (m *EventsItemEventsGetResponse_series) SetSubtitle(value *string)() {
    m.subtitle = value
}
// SetTicker sets the ticker property value. The ticker property
func (m *EventsItemEventsGetResponse_series) SetTicker(value *string)() {
    m.ticker = value
}
// SetTitle sets the title property value. The title property
func (m *EventsItemEventsGetResponse_series) SetTitle(value *string)() {
    m.title = value
}
// SetUpdatedAt sets the updatedAt property value. The updatedAt property
func (m *EventsItemEventsGetResponse_series) SetUpdatedAt(value *string)() {
    m.updatedAt = value
}
// SetVolume sets the volume property value. The volume property
func (m *EventsItemEventsGetResponse_series) SetVolume(value *float64)() {
    m.volume = value
}
// SetVolume24hr sets the volume24hr property value. The volume24hr property
func (m *EventsItemEventsGetResponse_series) SetVolume24hr(value *float64)() {
    m.volume24hr = value
}
type EventsItemEventsGetResponse_seriesable interface {
    i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.AdditionalDataHolder
    i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.Parsable
    GetActive()(*bool)
    GetArchived()(*bool)
    GetCgAssetName()(*string)
    GetClosed()(*bool)
    GetCommentCount()(*float64)
    GetCompetitive()(*string)
    GetCreatedAt()(*string)
    GetIcon()(*string)
    GetId()(*string)
    GetImage()(*string)
    GetLiquidity()(*float64)
    GetPythTokenID()(*string)
    GetRecurrence()(*string)
    GetSeriesType()(*string)
    GetSlug()(*string)
    GetStartDate()(*string)
    GetSubtitle()(*string)
    GetTicker()(*string)
    GetTitle()(*string)
    GetUpdatedAt()(*string)
    GetVolume()(*float64)
    GetVolume24hr()(*float64)
    SetActive(value *bool)()
    SetArchived(value *bool)()
    SetCgAssetName(value *string)()
    SetClosed(value *bool)()
    SetCommentCount(value *float64)()
    SetCompetitive(value *string)()
    SetCreatedAt(value *string)()
    SetIcon(value *string)()
    SetId(value *string)()
    SetImage(value *string)()
    SetLiquidity(value *float64)()
    SetPythTokenID(value *string)()
    SetRecurrence(value *string)()
    SetSeriesType(value *string)()
    SetSlug(value *string)()
    SetStartDate(value *string)()
    SetSubtitle(value *string)()
    SetTicker(value *string)()
    SetTitle(value *string)()
    SetUpdatedAt(value *string)()
    SetVolume(value *float64)()
    SetVolume24hr(value *float64)()
}
