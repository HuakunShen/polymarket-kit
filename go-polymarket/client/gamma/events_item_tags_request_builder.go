// Code generated by Microsoft Kiota - DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package gamma

import (
    "context"
    i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f "github.com/microsoft/kiota-abstractions-go"
)

// EventsItemTagsRequestBuilder builds and executes requests for operations under \gamma\events\{id}\tags
type EventsItemTagsRequestBuilder struct {
    i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f.BaseRequestBuilder
}
// EventsItemTagsRequestBuilderGetRequestConfiguration configuration for the request such as headers, query parameters, and middleware options.
type EventsItemTagsRequestBuilderGetRequestConfiguration struct {
    // Request headers
    Headers *i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f.RequestHeaders
    // Request options
    Options []i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f.RequestOption
}
// NewEventsItemTagsRequestBuilderInternal instantiates a new EventsItemTagsRequestBuilder and sets the default values.
func NewEventsItemTagsRequestBuilderInternal(pathParameters map[string]string, requestAdapter i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f.RequestAdapter)(*EventsItemTagsRequestBuilder) {
    m := &EventsItemTagsRequestBuilder{
        BaseRequestBuilder: *i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f.NewBaseRequestBuilder(requestAdapter, "{+baseurl}/gamma/events/{id}/tags", pathParameters),
    }
    return m
}
// NewEventsItemTagsRequestBuilder instantiates a new EventsItemTagsRequestBuilder and sets the default values.
func NewEventsItemTagsRequestBuilder(rawUrl string, requestAdapter i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f.RequestAdapter)(*EventsItemTagsRequestBuilder) {
    urlParams := make(map[string]string)
    urlParams["request-raw-url"] = rawUrl
    return NewEventsItemTagsRequestBuilderInternal(urlParams, requestAdapter)
}
// Get retrieve tags associated with a specific event
// returns a []EventsItemTagsable when successful
// returns a EventsItemTags404Error error when the service returns a 404 status code
// returns a EventsItemTags500Error error when the service returns a 500 status code
func (m *EventsItemTagsRequestBuilder) Get(ctx context.Context, requestConfiguration *EventsItemTagsRequestBuilderGetRequestConfiguration)([]EventsItemTagsable, error) {
    requestInfo, err := m.ToGetRequestInformation(ctx, requestConfiguration);
    if err != nil {
        return nil, err
    }
    errorMapping := i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f.ErrorMappings {
        "404": CreateEventsItemTags404ErrorFromDiscriminatorValue,
        "500": CreateEventsItemTags500ErrorFromDiscriminatorValue,
    }
    res, err := m.BaseRequestBuilder.RequestAdapter.SendCollection(ctx, requestInfo, CreateEventsItemTagsFromDiscriminatorValue, errorMapping)
    if err != nil {
        return nil, err
    }
    val := make([]EventsItemTagsable, len(res))
    for i, v := range res {
        if v != nil {
            val[i] = v.(EventsItemTagsable)
        }
    }
    return val, nil
}
// ToGetRequestInformation retrieve tags associated with a specific event
// returns a *RequestInformation when successful
func (m *EventsItemTagsRequestBuilder) ToGetRequestInformation(ctx context.Context, requestConfiguration *EventsItemTagsRequestBuilderGetRequestConfiguration)(*i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f.RequestInformation, error) {
    requestInfo := i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f.NewRequestInformationWithMethodAndUrlTemplateAndPathParameters(i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f.GET, m.BaseRequestBuilder.UrlTemplate, m.BaseRequestBuilder.PathParameters)
    if requestConfiguration != nil {
        requestInfo.Headers.AddAll(requestConfiguration.Headers)
        requestInfo.AddRequestOptions(requestConfiguration.Options)
    }
    requestInfo.Headers.TryAdd("Accept", "application/json")
    return requestInfo, nil
}
// WithUrl returns a request builder with the provided arbitrary URL. Using this method means any other path or query parameters are ignored.
// returns a *EventsItemTagsRequestBuilder when successful
func (m *EventsItemTagsRequestBuilder) WithUrl(rawUrl string)(*EventsItemTagsRequestBuilder) {
    return NewEventsItemTagsRequestBuilder(rawUrl, m.BaseRequestBuilder.RequestAdapter);
}
